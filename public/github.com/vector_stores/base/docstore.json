[["0",{"pageContent":"# Charites\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-8-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\nAn easy, intuitive, and efficient command-line tool for writing vector map styles compatible with the [Mapbox](https://docs.mapbox.com/mapbox-gl-js/style-spec/) and [MapLibre](https://maplibre.org/maplibre-gl-js-docs/style-spec/) Style Specification in YAML.\nWith YAML format's readability, JSON compiler, linter, and live style viewer on a local browser, you can simplify your map styling workflow.\n\nIn Greek mythology, the [Charites](https://en.wikipedia.org/wiki/Charites) are the three goddesses of charm, beauty, and human creativity. They are believed to have been worshipped not only by artists but also by those who aspired to technology to infuse them with a creative spirit.","metadata":{"source":"https://github.com/unvt/charites","loc":{"lines":{"from":1,"to":9}}}}],["1",{"pageContent":"Features\n\n- Initiate a project from scratch, or convert an existing `style.json` file to generate YAML style files.\n- Write styles in a simple YAML format.\n- Divide groups of layers in to multiple files for better readability and mantainability. `!!inc/file <relative-path-to-the-file>`\n- Use variables like `$backgroundColor` and `$waterColor` to style effectively.\n- Compile YAML to a single style.json file, with a format linter.\n- Use `--provider mapbox` to validate your style against Mapbox GL JS v2.x\n- Run `charites serve <source>` to preview your style live while you make changes in a browser.\n\n## Documentation\n\nDocumentation is available [here](https://unvt.github.io/charites/).\n\n## Contributing\n\nsee [CONTRIBUTING.md](./.github/CONTRIBUTING.md)\n\n## License\n\nMIT","metadata":{"source":"https://github.com/unvt/charites","loc":{"lines":{"from":11,"to":31}}}}],["2",{"pageContent":"Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):","metadata":{"source":"https://github.com/unvt/charites","loc":{"lines":{"from":33,"to":35}}}}],["3",{"pageContent":"<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://geolonia.com/\"><img src=\"https://avatars.githubusercontent.com/u/42296593?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Geolonia</b></sub></a><br /><a href=\"https://github.com/unvt/charites/commits?author=geolonia\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://naoki-is.me\"><img src=\"https://avatars.githubusercontent.com/u/8760841?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Naoki Ohashi</b></sub></a><br /><a href=\"https://github.com/unvt/charites/commits?author=naogify\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ubukawa\"><img src=\"https://avatars.githubusercontent.com/u/59204379?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>UBUKAWA Taro</b></sub></a><br /><a href=\"https://github.com/unvt/charites/commits?author=ubukawa\" title=\"Code\">💻</a></td>","metadata":{"source":"https://github.com/unvt/charites","loc":{"lines":{"from":37,"to":44}}}}],["4",{"pageContent":"<td align=\"center\"><a href=\"https://geolonia.com/\"><img src=\"https://avatars.githubusercontent.com/u/309946?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Takayuki Miyauchi</b></sub></a><br /><a href=\"https://github.com/unvt/charites/commits?author=miya0001\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://jin-igarashi.me\"><img src=\"https://avatars.githubusercontent.com/u/2639701?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jin Igarashi</b></sub></a><br /><a href=\"https://github.com/unvt/charites/commits?author=JinIgarashi\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://smellman.hatenablog.com/\"><img src=\"https://avatars.githubusercontent.com/u/135112?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Taro Matsuzawa aka. btm</b></sub></a><br /><a href=\"https://github.com/unvt/charites/commits?author=smellman\" title=\"Code\">💻</a></td>","metadata":{"source":"https://github.com/unvt/charites","loc":{"lines":{"from":45,"to":47}}}}],["5",{"pageContent":"<td align=\"center\"><a href=\"https://shinichi.blog\"><img src=\"https://avatars.githubusercontent.com/u/1124652?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Shinichi Nishikawa</b></sub></a><br /><a href=\"https://github.com/unvt/charites/commits?author=ShinichiNishikawa\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"http://yuiseki.net/\"><img src=\"https://avatars.githubusercontent.com/u/25507?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>yuiseki</b></sub></a><br /><a href=\"https://github.com/unvt/charites/commits?author=yuiseki\" title=\"Code\">💻</a></td>\n  </tr>\n</table>","metadata":{"source":"https://github.com/unvt/charites","loc":{"lines":{"from":48,"to":51}}}}],["6",{"pageContent":"<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!","metadata":{"source":"https://github.com/unvt/charites","loc":{"lines":{"from":53,"to":59}}}}],["7",{"pageContent":"# nanban\nA developer friendly UNVT Dockerfile based on Ubuntu/Intel\n\n# use\n```zsh\ndocker run -ti --rm -v $(pwd):/root/work unvt/nanban\n```\n\nvp-optimizer is not available in the recent upgrade.\nPlease use unvt/docker:12 to use vp-optimizer with the nodejs 12 environment. (nodejs 12's end of life is April 2022. So, this is not recommended.)\n\nuse unvt/nanban:latest (or unvt/nanban:18) for nodejs 18\n\n# build\n```zsh\nrake build\n```\n\n# packaging policy\nThis is a developer friendly build. If you need anything to be added, please make a pull request for that. \n\n# about the name\nThe name `nanban` is from Tamil language. It means friend.\n\n# Update History\n2022 March: Upgraded the nodejs version to 16 as nanban:16. Added unvt/kata and unvt/itoma.   \n(installation of vt-optimizer is suspended because it somehow prevent Docker image creation.)\n\n2023 January: Upgraded the nodejs version to 18. Replaced mapbox/tippecanoe to felt/tippecanoe.","metadata":{"source":"https://github.com/unvt/nanban","loc":{"lines":{"from":1,"to":29}}}}],["8",{"pageContent":"# itoma\nArcGIS REST API from style.yml of Charites\n\n![social preview image](https://repository-images.githubusercontent.com/444032842/ddd2f074-225e-4fe5-9311-2b41be83d48a)\n\n# About the social preview image\nthe [social preview image](https://repository-images.githubusercontent.com/444032842/ddd2f074-225e-4fe5-9311-2b41be83d48a) is [Brush Rest (Fude-oki) in the Shape of a Narcissus Spray and Blossoming Plum Branch](https://www.metmuseum.org/art/collection/search/49431).\n\n## Install\n\n```\n$ npm install -g @unvt/itoma\n```","metadata":{"source":"https://github.com/unvt/itoma","loc":{"lines":{"from":1,"to":13}}}}],["9",{"pageContent":"How to use\n\n```\n$ itoma serve [path/to/style.yml]\n```\n\nMore information on options are available with the `--help` option.\n\n```\n$ itoma --help\nUsage: itoma [options] [command]\n\nOptions:\n  -v, --version             output the version number\n  -h, --help                display help for command\n\nCommands:\n  serve [options] <source>  serve your map locally\n  help [command]            display help for command\n```\n\n### Map Preview\nMap Previews by Mapbox GL JS, MapLibre GL JS, and ArcGIS API for Javascript can be seen from http://localhost:8080 (or any specified port).","metadata":{"source":"https://github.com/unvt/itoma","loc":{"lines":{"from":15,"to":37}}}}],["10",{"pageContent":"ArcGIS REST API response\nOnce \"itoma serve\" starts, we can see the ArcGIS REST API responses from http://localhost:8080/arcgis/rest/services/{any_name}/VectorTileServer.  \n\n* index.json: http://localhost:8080/arcgis/rest/services/{any_name}/VectorTileServer/index.json\n* root.json (style): http://localhost:8080/arcgis/rest/services/{any_name}/VectorTileServer/resources/styles/root.json\n* sprites: http://localhost:8080/arcgis/rest/services/{any_name}/VectorTileServer/resources/sprites/\n* glyphs (fonts): http://localhost:8080/arcgis/rest/services/{any_name}/VectorTileServer/resources/fonts/\n* tilemap: http://localhost:8080/arcgis/rest/services/{any_name}/VectorTileServer/tilemap\n    * Please be advised that the tilemap range (of ZL) is fixed. (You may need to edit source code to adjust it for your own tile range.)","metadata":{"source":"https://github.com/unvt/itoma","loc":{"lines":{"from":39,"to":47}}}}],["11",{"pageContent":"It is important to understand that ArcGIS Online now supports https protocol only (not http). When you use unvt/itoma to preview your tile with ArcGIS online, please use https protocol for localhost.","metadata":{"source":"https://github.com/unvt/itoma","loc":{"lines":{"from":49,"to":49}}}}],["12",{"pageContent":"Development\n\n```\n$ git clone https://github.com/unvt/itoma\n$ cd itoma\n$ npm install\n```\n\nThen you can install:\n\n```\n$ npm install -g .\n```\n\n## License\n\nMIT","metadata":{"source":"https://github.com/unvt/itoma","loc":{"lines":{"from":52,"to":68}}}}],["13",{"pageContent":"# equinox: UNVT one-line installer for Raspberry Pi OS\n\n# How to install\nOn Raspberry Pi OS, please execute: \n```\ncurl -sL https://unvt.github.io/equinox/install.sh | bash -\n```\n\n## Security considerations\n`equinox` installs UNVT using the `root` priviledge. It is always good to check what will be done before you actually do it. In order to do so, please run the following. \n\n```\ncurl -sL https://unvt.github.io/equinox/install.sh\n```\n\n# List of software installed by `equinox`","metadata":{"source":"https://github.com/unvt/equinox","loc":{"lines":{"from":1,"to":16}}}}],["14",{"pageContent":"Geospatial\n- charites: An easy, intuitive, and efficient command-line tool for writing vector map styles compatible with the Mapbox and MapLibre Style Specification in YAML\n- gdal-bin: Geospatial Data Abstraction Library - Utility programs\n- osmium-tool: Command line tool for working with OpenStreetMap data\n- pdal: Point Data Abstraction Library\n- tippecanoe: Builds vector tilesets from large (or small) collections of GeoJSON, Geobuf, or CSV features.\n\n### Geospatial on Node.js\n- @mapbox/mapbox-gl-style-spec: Mapbox GL style specification and utilities\n- vt-optimizer: A small NodeJS cli tool to inspect and optimize Mapbox Vector Tiles files\n- TODO: @mapbox/vtshaver: Remove unneeded vector tile layers, features, and properties based on particular style","metadata":{"source":"https://github.com/unvt/equinox","loc":{"lines":{"from":17,"to":27}}}}],["15",{"pageContent":"System\n- git: fast, scalable, distributed revision control system\n- nginx: small, powerful, scalable web/proxy server\n- nodejs (Node.js 14): evented I/O for V8 javascript - runtime executable\n- parallel: build and execute command lines from standard input in parallel\n- ruby: Interpreter of object-oriented sripting language Ruby\n- sqlite3: Command line interface for SQLite 3\n- tmux: terminal multiplexer\n- code: Visual Studio Code\n- vim: Vi IMproved - enhanced vi editor\n- xrdp: Remote Desktop Protocol (RDP) server\n- yarn: Fast, reliable, and secure dependency management\n- zip: Archiver for .zip files\n\n## Development\n- autoconf: automatic configure script builder\n- automake: Tool for generating GNU Standards-compliant Makefiles\n- libtool: Generic library support script\n\n### Library\n- libsqlite3-dev: SQLite 3 development files\n- linux-headers: Common header files for Linux","metadata":{"source":"https://github.com/unvt/equinox","loc":{"lines":{"from":29,"to":50}}}}],["16",{"pageContent":"Tools on Node.js\n- browserify: Browser-side require() the node way\n- budo: A browserify server for rapid prototyping\n- hjson: A user interface for JSON\n- pm2: Production process manager for Node.JS applications with a built-in load balancer\n- rollup: Next-generation ES module bundler\n- @pushcorn/hocon-parser: A HOCON Parser for Node.js\n\n# About the name\nI started this project on the spring equinox of 2020.","metadata":{"source":"https://github.com/unvt/equinox","loc":{"lines":{"from":52,"to":61}}}}],["17",{"pageContent":"# Generate sprite image and json without Mapnik\n\n- SVG and PNG icon inputs\n- Multiple pixel ratio support\n- Uses `sharp` for rendering (compatibility with newer Node.js versions and architectures)\n\n## Install\n\n```bash\nyarn add @unvt/sprite-one\n```\n\nor\n\n```bash\nnpm install @unvt/sprite-one\n```","metadata":{"source":"https://github.com/unvt/sprite-one","loc":{"lines":{"from":1,"to":17}}}}],["18",{"pageContent":"Usage\n\n- CLI\n\n```zsh\n$ sprite-one -h\nUsage: sprite-one [options] <sprite_filename>\n\ngenerate sprite from icons\n\nOptions:\n  -v, --version            output the version number\n  -i, --icon <icons...>    A folder path which stores SVG icons. Multiple folders can be set.\n  -r, --ratio <ratios...>  pixel ratio to generate sprite. default is 1.\n  -h, --help               display help for command\n```\n\n- npm\n\n```javascript\nimport { generateSprite } from '@unvt/sprite-one'\n\ngenerateSprite('../out', '../input', [2]).then(() => {})\n```\n\nIf multiple ratios are specified in either CLI or Node.js, the default file names when the ratio is more than one will be changed to the standard file name used by Mapbox and MapLibre (e.g., `sprite.json` for 1 ratio, `sprite@2x.json` for 2 ratio...).","metadata":{"source":"https://github.com/unvt/sprite-one","loc":{"lines":{"from":19,"to":44}}}}],["19",{"pageContent":"Multiple pixel ratio support\n\nYou can supply mulitple pixel ratio versions of the same icon in the directory by using the following naming convention:\n\n- `[name].png` or `[name].svg` -- the default icon\n- `[name]@2x.png` or `[name]@2x.svg` -- the icon to use in the 2x spritesheet\n\nIf the `@2x` version doesn't exist, the default icon will be used and scaled up appropriately. If you are using PNG icons, it is strongly recommended that you prepare alternate versions for each pixel ratio you require.\n\nNote that while this feature is supported for SVG icons, this is usually unneccesary because SVG, as a vector format, can be scaled without problems.","metadata":{"source":"https://github.com/unvt/sprite-one","loc":{"lines":{"from":46,"to":55}}}}],["20",{"pageContent":"Develop\n\nvia `bin/index.ts`\n\n```bash\ngit clone https://github.com/unvt/sprite-one.git\ncd sprite-one\nyarn\nnpx ts-node src/bin/index.ts ../../tmp/out --icon ../../tmp/maki/icons\nnpx ts-node src/bin/index.ts ../../tmp/out --icon ../../tmp/maki/icons --ratio=2\nnpx ts-node src/bin/index.ts ../../tmp/out --icon ../../tmp/maki/icons --icon ../../tmp/maki/icons2 --ratio=1 --ratio=2\n```","metadata":{"source":"https://github.com/unvt/sprite-one","loc":{"lines":{"from":57,"to":68}}}}],["21",{"pageContent":"# UNVT Portable\n\n## Wtat is UNVT Portable\n\n\"UNVT Portable\" is a package for RaspberryPi that functions as a map hosting server and can be freely accessed from a web browser within a local network.\n\nIt is mainly intended to function in an offline environment during times of severe disaster, and is expected to play an active role in use cases such as at city halls of local governments where disaster response headquarters are set up to assess the situation and respond to disasters by combining aerial drone images taken after a disaster occurs with OpenStreetMap and various open data tile data sets prepared in advance.\n\n<img src=\"https://github.com/unvt/portable/blob/main/assets/img/UNVTportable_flow.png?raw=true\" width=\"800\" >\n\n\n## How to Install\n* Online manual: https://github.com/unvt/portable/wiki","metadata":{"source":"https://github.com/unvt/portable","loc":{"lines":{"from":1,"to":13}}}}],["22",{"pageContent":"How to Install\n* Online manual: https://github.com/unvt/portable/wiki\n\n\n## How to use\n\nConnection to UNVT Portable uses an automatic Wi-Fi connection function with QR codes, and QR codes are provided for each subject map.\nThe system was designed so that even municipal employees unfamiliar with digital terminals can easily access geospatial information.\n\ndemo:\nhttps://youtube.com/shorts/_ZqT9D-Pfos\n\nManual:\nhttps://docs.google.com/presentation/d/1SuDCDUfLHZ2Xw1SdpUIillYWJekY0L4TqS7-X4sDZqg/edit?usp=sharing\n\n\n## Original Case for UNVT Portable RaspberryPi\n<img src=\"https://user-images.githubusercontent.com/416977/74690710-79dbc380-5223-11ea-9032-6dfe028c593e.jpg\" width=\"600\" >\n<img src=\"https://user-images.githubusercontent.com/416977/75513899-82a97200-5a39-11ea-9065-26a139910b69.jpg\" width=\"600\" >","metadata":{"source":"https://github.com/unvt/portable","loc":{"lines":{"from":13,"to":31}}}}],["23",{"pageContent":"# naru\nVector Tile Academy (VTA) code for Raspberry Pi\n\n# Background\nThis repository is the Raspberry Pi implementation for [Vector Tile Academy](https://unvt.github.io/vta).\n\n# Use\nLog in to your Raspbian and then execute the following.\n\n## Install and download (requires internet connection)\n```zsh\ncurl -sL https://unvt.github.io/equinox/install.sh | bash -\ngit clone https://github.com/unvt/naru.git\ncd naru\nrake inet:install # install extra software\nvi .env #specify OSM regison and area for tiles\nrake inet:download # donwload source geospatial data for exercise\nrake inet:sprite # download and generate sprite files\n```\n\n## First time exercise\n```zsh\nrake inet:download # download osm.pbf\nrake inet:mbgljs # download mapbox-gl-js package\nrake js # rollup javascript code\nrake inet:sprite # download maki and build sprite\nrake inet:fonts # download fonts and create glyphs\nrake tiles # create mbtiles under src folder\nrake style # create style.json\nrake host # host unvt on budo\n```","metadata":{"source":"https://github.com/unvt/naru","loc":{"lines":{"from":1,"to":31}}}}],["24",{"pageContent":"Advanced exercise\n```zsh\nrake inet:mbgljs\nrake js\nrake inet:fonts\nrake inet:sprite\nrake optimizer # analyze tiles.mbtiles\nrake shaver\n```\n\n## Shutdown Raspberry Pi\n```zsh\nsudo poweroff\n```\nNow it is OK to disconnect Raspberry Pi. \n\n# Implementation details\n## List of software installed by `rake inet:install`\n### Node.js\n- [@mapbox/vtshaver](https://github.com/mapbox/vtshaver)\n- [vt-optimizer](https://github.com/ibesora/vt-optimizer)\n### Ruby\n- [mdless](https://github.com/ttscoff/mdless)\n- [dotenv](https://github.com/bkeepers/dotenv)\n### policy\nthe list shall be minimized, moving items to `equinox`.","metadata":{"source":"https://github.com/unvt/naru","loc":{"lines":{"from":33,"to":58}}}}],["25",{"pageContent":"Run on Docker\n\n- for creating `tiles.mbtiles` from the latest osm.pbf\n```zsh\ndocker build . --tag unvt/naru\ndocker run -v ${pwd}:/usr/src/app -p 9966:9966 -it unvt/naru\n\ncd /usr/src/app\nvi .env #specify OSM regison and area for tiles\nrake inet:download # download osm.pbf\nrake inet:mbgljs # download mapbox-gl-js package\nrake js # rollup javascript code\nrake inet:sprite # download maki and build sprite\nrake inet:fonts # download fonts and create glyphs\nrake tiles # create mbtiles under src folder\nrake style # create style.json\nrake optimizer # analyze tiles.mbtiles\n```\n\nnote: npm packages, \"are-we-there-yet\", \"mapnik\", and \"fontnik\" were requested at my trial (TU in May 2021)  \n\n- for hosting tiles after creating by UNVT\n```\ndocker build . --tag unvt/naru\ncp .env.example .env\nvi .env # specify your target REGION and AREA on .env file\ndocker-compose up","metadata":{"source":"https://github.com/unvt/naru","loc":{"lines":{"from":60,"to":86}}}}],["26",{"pageContent":"# About the name\n*naru* means \"to be implemented\" in traditional Japanese. It was taken from \"いづ方をも捨てじと心にとり持ちては、一事もなるべからず\" of 徒然草 一八八, which roughly means \"If you try to take care of everything, nothing can be implemented.\"","metadata":{"source":"https://github.com/unvt/naru","loc":{"lines":{"from":89,"to":90}}}}],["27",{"pageContent":"# UN Vector Tile Toolkit\n\n## 1. Objective\nThe objective of the UN Vector Tile Toolkit is to facilitate the production by public organizations of vector tiles for further use as basemaps. The UN Vector Tile toolkit aims at providing the appropriate environment to enable public organizations to use and produce basemaps in a way that is as user-friendly as the ones provided by the dominant web map platforms.","metadata":{"source":"https://github.com/un-vector-tile-toolkit/un-vector-tile-toolkit.github.io","loc":{"lines":{"from":1,"to":4}}}}],["28",{"pageContent":"2. Structure\nThe figure below represents the structure of the UN Vector Tile Toolkit, which makes maximum use of existing open source software while adding tailor-made scripts developed in the UN and shared openly for the community. \n\n![structure](structure.png)\n\n### 2.1 Import\nThis function intends to import data from existing data sources and to assign layer names and zoom levels. This has been achieved by the creation of custom open source scripts specific for this function. We design these scripts to keep data-specific settings private from the open source repository. The data sources will include PostGIS, ESRI Shapefile, OSM PBF, [GeoJSON Text Sequence](https://tools.ietf.org/html/rfc8142), and GeoJSON Vector Tiles.","metadata":{"source":"https://github.com/un-vector-tile-toolkit/un-vector-tile-toolkit.github.io","loc":{"lines":{"from":6,"to":12}}}}],["29",{"pageContent":"2.2 Produce\nThis function aims at producing vector tile packages in mbtiles format from GeoJSON Text Sequence from the previously mentioned Import function. We use [Tippecanoe](https://github.com/mapbox/tippecanoe) for this step. \n\nAutomatic and continuous update of vector tiles is important. We realized this by producing vector tile packages by modules whose extent are exactly the same as those of the tiles at zoom level 6.\n\n### 2.3 Host\nThe goal of this function is to host modular vector tile packages. Node.js scripts were created to achieve this in a simple and scalable manner. Some script includes a feature to provide vector tiles by mimicking the behavior of an ArcGIS Server. This function is small but essential to ensure proper performance and interoperability. \n\n### 2.4 Style\n[Maputnik](https://github.com/maputnik/editor) is used at this stage in order to properly style the hosted vector tiles according to the appropriate desired look and feel.","metadata":{"source":"https://github.com/un-vector-tile-toolkit/un-vector-tile-toolkit.github.io","loc":{"lines":{"from":14,"to":23}}}}],["30",{"pageContent":"2.4 Style\n[Maputnik](https://github.com/maputnik/editor) is used at this stage in order to properly style the hosted vector tiles according to the appropriate desired look and feel.\n\n### 2.5 Optimize\nThis function tries to enhance the optimization of the size of individual vector tiles to ensure high-performance vector tile service. This tool measures and visualizes the size of individual vector tiles or the whole vector tile package, to assist the proper design of the vector tile schema.\n\nIt is too easy to create oversized vector tiles. Oversized vector tiles make the whole application slow that is why new scripts were developed to calculate and visualize a matrix to show the distribution of the size of individual vector tiles in a vector tile package with the intention to act at the data level on those that yield larger sizes. A JavaScript program was also created to visualize the size of individual vector tiles on a web map.","metadata":{"source":"https://github.com/un-vector-tile-toolkit/un-vector-tile-toolkit.github.io","loc":{"lines":{"from":23,"to":29}}}}],["31",{"pageContent":"3. Achievement\nA global vector tile prototype has already been developed for internal use in the United Nations. The transfer size of individual vector tiles has been optimized to achieve under 128KB. Also, the prototype is interoperable with a framework that works with ArcGIS Server Vector Tile Service. \n\nThe plan is to ensure that the prototype can be updated automatically and continuously, within one-day delay from the database update. As of now, it can be confirmed that the global vector tile dataset can be produced well within a week.","metadata":{"source":"https://github.com/un-vector-tile-toolkit/un-vector-tile-toolkit.github.io","loc":{"lines":{"from":31,"to":34}}}}],["32",{"pageContent":"4. Recent progress\nThe OSGeo.JP Workshop for UN Vector Tile Toolkit was held on 2 December 2018 in Moratuwa, Sri Lanka. The workshop provided a hands-on experience for producing and hosting optimized vector tiles. [The hands-on material](https://speakerdeck.com/hfu/the-osgeojp-workshop-for-the-un-vector-tile-toolkit) is available to the community in an open manner. \n\nVersion 1 of the UN Vector Tile Toolkit was released in a [keynote speech](https://speakerdeck.com/hfu/collaboration-of-geospatial-information-communities-through-the-un-open-gis-initiative) of the FOSS4G Asia 2018.\n\nThe Geospatial Information Authority of Japan is also using the UN Vector Tile Toolkit to prototype their vector tile production. \n\n![logo](logo.png)","metadata":{"source":"https://github.com/un-vector-tile-toolkit/un-vector-tile-toolkit.github.io","loc":{"lines":{"from":36,"to":43}}}}],["33",{"pageContent":"## OpenMapTiles [![Build Status](https://github.com/openmaptiles/openmaptiles/workflows/OpenMapTiles%20Integrity%20CI/badge.svg?branch=master)](https://github.com/openmaptiles/openmaptiles/actions)\n\nOpenMapTiles is an extensible and open tile schema based on the OpenStreetMap. This project is used to generate vector tiles for online zoomable maps. OpenMapTiles is about creating a beautiful basemaps with general layers containing topographic information. More information [openmaptiles.org](https://openmaptiles.org/) and [maptiler.com/data/](https://www.maptiler.com/data/).\n\nWe encourage you to collaborate, reuse and adapt existing layers, or add your own layers. You may use our approach for your own vector tile project. Feel free to fork the repo and experiment. The repository is built on top of the [openmaptiles/openmaptiles-tools](https://github.com/openmaptiles/openmaptiles-tools) to simplify vector tile creation.","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":1,"to":5}}}}],["34",{"pageContent":"Please keep in mind that OpenMapTiles schema should display general topographic content. If creating a new layer or expanding an existing layer with a specific theme, please create a fork and invite other community members to cooperate on your topic. OpenMapTiles schema is used in many projects all over the world and the size of the final vector tiles needs to be considered in any update.\n\n- :link: Schema https://openmaptiles.org/schema\n- :link: Docs https://openmaptiles.org/docs\n- :link: Data for download: https://www.maptiler.com/data/\n- :link: Hosting https://www.maptiler.com/cloud/\n- :link: Create own layer https://github.com/openmaptiles/openmaptiles-skiing\n- :link: Discuss at the #openmaptiles channel at [OSM Slack](https://osmus-slack.herokuapp.com/)","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":7,"to":14}}}}],["35",{"pageContent":"Styles\n\nYou can start from several GL styles supporting the OpenMapTiles vector schema.\n\n:link: [Learn how to create Mapbox GL styles with Maputnik and OpenMapTiles](http://openmaptiles.org/docs/style/maputnik/).\n\n\n- [OSM OpenMapTiles](./style/README.md)\n- [OSM Bright](https://github.com/openmaptiles/osm-bright-gl-style)\n- [MapTiler Basic](https://github.com/openmaptiles/maptiler-basic-gl-style)\n- [MapTiler 3D](https://github.com/openmaptiles/maptiler-3d-gl-style)\n- [Fiord Color](https://github.com/openmaptiles/fiord-color-gl-style)\n- [MapTiler Toner](https://github.com/openmaptiles/maptiler-toner-gl-style)\n- [OSM Liberty](https://github.com/maputnik/osm-liberty)\n- [Positron](https://github.com/openmaptiles/positron-gl-style)\n- [Dark Matter](https://github.com/openmaptiles/dark-matter-gl-style)\n\nWe also ported over our favorite old raster styles (TM2).\n\n:link: [Learn how to create TM2 styles with Mapbox Studio Classic and OpenMapTiles](http://openmaptiles.org/docs/style/mapbox-studio-classic/).","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":16,"to":35}}}}],["36",{"pageContent":"We also ported over our favorite old raster styles (TM2).\n\n:link: [Learn how to create TM2 styles with Mapbox Studio Classic and OpenMapTiles](http://openmaptiles.org/docs/style/mapbox-studio-classic/).\n\n- [Light](https://github.com/openmaptiles/mapbox-studio-light.tm2/)\n- [Dark](https://github.com/openmaptiles/mapbox-studio-dark.tm2/)\n- [OSM Bright](https://github.com/openmaptiles/mapbox-studio-osm-bright.tm2/)\n- [Pencil](https://github.com/openmaptiles/mapbox-studio-pencil.tm2/)\n- [Woodcut](https://github.com/openmaptiles/mapbox-studio-woodcut.tm2/)\n- [Pirates](https://github.com/openmaptiles/mapbox-studio-pirates.tm2/)\n- [Wheatpaste](https://github.com/openmaptiles/mapbox-studio-wheatpaste.tm2/)","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":35,"to":45}}}}],["37",{"pageContent":"Schema\n\nOpenMapTiles consists out of a collection of documented and self contained layers you can modify and adapt.\nTogether the layers make up the OpenMapTiles tileset.\n\n:link: [Study the vector tile schema](http://openmaptiles.org/schema)","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":47,"to":52}}}}],["38",{"pageContent":":link: [Study the vector tile schema](http://openmaptiles.org/schema)\n\n- [aeroway](https://openmaptiles.org/schema/#aeroway)\n- [boundary](https://openmaptiles.org/schema/#boundary)\n- [building](https://openmaptiles.org/schema/#building)\n- [housenumber](https://openmaptiles.org/schema/#housenumber)\n- [landcover](https://openmaptiles.org/schema/#landcover)\n- [landuse](https://openmaptiles.org/schema/#landuse)\n- [mountain_peak](https://openmaptiles.org/schema/#mountain_peak)\n- [park](https://openmaptiles.org/schema/#park)\n- [place](https://openmaptiles.org/schema/#place)\n- [poi](https://openmaptiles.org/schema/#poi)\n- [transportation](https://openmaptiles.org/schema/#transportation)\n- [transportation_name](https://openmaptiles.org/schema/#transportation_name)\n- [water](https://openmaptiles.org/schema/#water)\n- [water_name](https://openmaptiles.org/schema/#water_name)\n- [waterway](https://openmaptiles.org/schema/#waterway)","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":52,"to":68}}}}],["39",{"pageContent":"Develop\n\nTo work on OpenMapTiles you need Docker.\n\n- Install [Docker](https://docs.docker.com/engine/installation/). Minimum version is 1.12.3+.\n- Install [Docker Compose](https://docs.docker.com/compose/install/). Minimum version is 1.7.1+.\n\n### Microsoft Windows Subsystem for Linux (WSL)\n\nPlease use Linux `/home/user/` directory, not Windows e.g. `/mnt/c` directory.\n\n### Build\n\nBuild the tileset.\n\n```bash\ngit clone https://github.com/openmaptiles/openmaptiles.git\ncd openmaptiles\n# Build the imposm mapping, the tm2source project and collect all SQL scripts\nmake\n```\n\nYou can execute the following manual steps (for better understanding)\nor use the provided `quickstart.sh` script to automatically download and import given area. If area is not given, Albania will be imported. List of available areas `make list-geofabrik`.\n\n```\n./quickstart.sh <area>\n```","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":70,"to":97}}}}],["40",{"pageContent":"Prepare the Database\n\nNow start up the database container.\n\n```bash\nmake start-db\n```\n\nImport external data from [OpenStreetMapData](http://osmdata.openstreetmap.de/), [Natural Earth](http://www.naturalearthdata.com/) and [OpenStreetMap Lake Labels](https://github.com/lukasmartinelli/osm-lakelines). Natural Earth country boundaries are used in the few lowest zoom levels.\n\n```bash\nmake import-data\n```\n\nDownload OpenStreetMap data extracts from any source like [Geofabrik](http://download.geofabrik.de/), and store the PBF file in the `./data` directory. To use a specific download source, use `download-geofabrik`, `download-bbbike`, or `download-osmfr`, or use `download` to make it auto-pick the area. You can use `area=planet` for the entire OSM dataset (very large).  Note that if you have more than one `data/*.osm.pbf` file, every `make` command will always require `area=...` parameter (or you can just `export area=...` first).\n\n```bash\nmake download area=albania","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":99,"to":116}}}}],["41",{"pageContent":"[Import OpenStreetMap data](https://github.com/openmaptiles/openmaptiles-tools/blob/master/bin/import-osm) with the mapping rules from\n`build/mapping.yaml` (which has been created by `make`). Run after any change in layers definition (any change in `mapping.yaml`).\n\n```bash\nmake import-osm\n```\n\nImport labels from Wikidata. If an OSM feature has [Key:wikidata](https://wiki.openstreetmap.org/wiki/Key:wikidata), OpenMapTiles check corresponding item in Wikidata and use its [labels](https://www.wikidata.org/wiki/Help:Label) for languages listed in [openmaptiles.yaml](openmaptiles.yaml). So the generated vector tiles includes multi-languages in name field.\n\nThis step uses [Wikidata Query Service](https://query.wikidata.org) to download just the Wikidata IDs that already exist in the database.\n\n```bash\nmake import-wikidata\n```","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":119,"to":132}}}}],["42",{"pageContent":"Work on Layers\nEach time you modify a layer's `mapping.yaml` file or add new OSM tags, run `make` and `make import-osm` to recreate tables (potentially with additional data) in PostgreSQL. With the new data, there can be new Wikidata records also.\n```\nmake clean\nmake\nmake import-osm\nmake import-wikidata\n```\n\nEach time you modify layer SQL code run `make` and `make import-sql`.\n\n```\nmake clean\nmake\nmake import-sql\n```\n\nEach time you make a modification that adds a new feature to vector tiles e.g. adding new OSM tags, modify the layer \nstyle snippet by adding new style layer so the changes are propagated visually into the style.\nAll new style layers must have the `order` value which determines the order or rendering in the map style. \nAfter the layer style snippet is modified run:\n```bash\nmake build-style","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":134,"to":156}}}}],["43",{"pageContent":"Now you are ready to **generate the vector tiles**. By default, `./.env` specifies the entire planet BBOX for zooms 0-7, but running `generate-bbox-file` will analyze the data file and set the `BBOX` param to limit tile generation.\n\n```\nmake generate-bbox-file  # compute data bbox -- not needed for the whole planet\nmake generate-tiles-pg   # generate tiles\n```","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":161,"to":166}}}}],["44",{"pageContent":"Workflow to generate tiles\nIf you go from top to bottom you can be sure that it will generate a .mbtiles file out of a .osm.pbf file\n```\nmake clean                  # clean / remove existing build files\nmake                        # generate build files\nmake start-db               # start up the database container.\nmake import-data            # Import external data from OpenStreetMapData, Natural Earth and OpenStreetMap Lake Labels.\nmake download area=albania  # download albania .osm.pbf file -- can be skipped if a .osm.pbf file already existing\nmake import-osm             # import data into postgres\nmake import-wikidata        # import Wikidata\nmake import-sql             # create / import sql functions \nmake generate-bbox-file     # compute data bbox -- not needed for the whole planet\nmake generate-tiles-pg      # generate tiles\n```\nInstead of calling `make download area=albania` you can add a .osm.pbf file in the `data` folder `openmaptiles/data/your_area_file.osm.pbf`","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":168,"to":182}}}}],["45",{"pageContent":"License\n\nAll code in this repository is under the [BSD license](./LICENSE.md). Design and the cartography decisions encoded in the schema and SQL are licensed under [CC-BY](./LICENSE.md).\n\nProducts or services using maps derived from OpenMapTiles schema need to visibly credit \"OpenMapTiles.org\" or reference \"OpenMapTiles\" with a link to https://openmaptiles.org/. Exceptions to attribution requirement can be granted on request.\n\nFor a browsable electronic map based on OpenMapTiles and OpenStreetMap data, the\ncredit should appear in the corner of the map. For example:\n\n[© OpenMapTiles](https://openmaptiles.org/) [© OpenStreetMap contributors](https://www.openstreetmap.org/copyright)\n\nFor printed and static maps a similar attribution should be made in a textual\ndescription near the image, in the same fashion as if you cite a photograph.","metadata":{"source":"https://github.com/openmaptiles/openmaptiles","loc":{"lines":{"from":185,"to":197}}}}],["46",{"pageContent":"# CesiumJS\n\n[![Build Status](https://travis-ci.com/CesiumGS/cesium.svg?branch=main)](https://travis-ci.com/CesiumGS/cesium)\n[![npm](https://img.shields.io/npm/v/cesium)](https://www.npmjs.com/package/cesium)\n[![Docs](https://img.shields.io/badge/docs-online-orange.svg)](https://cesium.com/learn/)\n\n![Cesium](https://github.com/CesiumGS/cesium/wiki/logos/Cesium_Logo_Color.jpg)\n\nCesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.\n\nBuilt on open formats, CesiumJS is designed for robust interoperability and scaling for massive datasets.","metadata":{"source":"https://github.com/CesiumGS/cesium","loc":{"lines":{"from":1,"to":11}}}}],["47",{"pageContent":"[**Examples**](https://sandcastle.cesium.com/) :earth_asia: [**Docs**](https://cesium.com/learn/cesiumjs-learn/) :earth_americas: [**Website**](https://cesium.com/cesiumjs) :earth_africa: [**Forum**](https://community.cesium.com/) :earth_asia: [**User Stories**](https://cesium.com/user-stories/)\n\n---","metadata":{"source":"https://github.com/CesiumGS/cesium","loc":{"lines":{"from":15,"to":17}}}}],["48",{"pageContent":":rocket: Get started\n\nVisit the [Downloads page](https://cesium.com/downloads/) to download a pre-built copy of CesiumJS.","metadata":{"source":"https://github.com/CesiumGS/cesium","loc":{"lines":{"from":19,"to":21}}}}],["49",{"pageContent":"npm & yarn\n\nIf you’re building your application using a module bundler such as Webpack, Parcel, or Rollup, you can install CesiumJS via the [`cesium` npm package](https://www.npmjs.com/package/cesium):\n\n```sh\nnpm install cesium --save\n```\n\nThen, import CesiumJS in your app code. Import individual modules to benefit from tree shaking optimizations through most build tools:\n\n```js\nimport { Viewer } from \"cesium\";\nimport \"cesium/Build/Cesium/Widgets/widgets.css\";\n\nconst viewer = new Viewer(\"cesiumContainer\");\n```\n\nIn addition to the `cesium` package, CesiumJS is also [distributed as scoped npm packages for better dependency management](https://cesium.com/blog/2022/12/07/modular-structure-in-cesiumjs/):\n\n- [`@cesium/engine`](./packages/engine/README.md) - CesiumJS's core, rendering, and data APIs\n- [`@cesium/widgets`](./packages/widgets/README.md) - A widgets library for use with CesiumJS","metadata":{"source":"https://github.com/CesiumGS/cesium","loc":{"lines":{"from":23,"to":43}}}}],["50",{"pageContent":"What next?\n\nSee our [Quickstart Guide](https://cesium.com/learn/cesiumjs-learn/cesiumjs-quickstart/) for more information on getting a CesiumJS app up and running.\n\nInstructions for serving local data are in the CesiumJS\n[Offline Guide](./Documentation/OfflineGuide/README.md).\n\nInterested in contributing? See [CONTRIBUTING.md](CONTRIBUTING.md). :heart:","metadata":{"source":"https://github.com/CesiumGS/cesium","loc":{"lines":{"from":45,"to":52}}}}],["51",{"pageContent":":green_book: License\n\n[Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html). CesiumJS is free for both commercial and non-commercial use.\n\n## :earth_americas: Where does the Global 3D Content come from?\n\nThe Cesium platform follows an [open-core business model](https://cesium.com/why-cesium/open-ecosystem/cesium-business-model/) with open source runtime engines such as CesiumJS and optional commercial subscription to Cesium ion.\n\nCesiumJS can stream [3D content such as terrain, imagery, and 3D Tiles from the commercial Cesium ion platform](https://cesium.com/platform/cesium-ion/content/) alongside open standards from other offline or online services. We provide Cesium ion as the quickest option for all users to get up and running, but you are free to use any combination of content sources with CesiumJS that you please.\n\nBring your own data for tiling, hosting, and streaming from Cesium ion. [Using Cesium ion](https://cesium.com/ion/signup/) helps support CesiumJS development.","metadata":{"source":"https://github.com/CesiumGS/cesium","loc":{"lines":{"from":54,"to":64}}}}],["52",{"pageContent":":white_check_mark: Features\n\n- Stream in 3D Tiles and other standard formats from Cesium ion or another source\n- Visualize and analyze on a high-precision WGS84 globe\n- Share with users on desktop or mobile\n\nSee more in the [CesiumJS Features Checklist](https://github.com/CesiumGS/cesium/wiki/CesiumJS-Features-Checklist).","metadata":{"source":"https://github.com/CesiumGS/cesium","loc":{"lines":{"from":66,"to":72}}}}],["53",{"pageContent":"# openstreetmap-website\n\n[![Lint](https://github.com/openstreetmap/openstreetmap-website/workflows/Lint/badge.svg?branch=master&event=push)](https://github.com/openstreetmap/openstreetmap-website/actions?query=workflow%3ALint%20branch%3Amaster%20event%3Apush)\n[![Tests](https://github.com/openstreetmap/openstreetmap-website/workflows/Tests/badge.svg?branch=master&event=push)](https://github.com/openstreetmap/openstreetmap-website/actions?query=workflow%3ATests%20branch%3Amaster%20event%3Apush)\n[![Coverage Status](https://coveralls.io/repos/openstreetmap/openstreetmap-website/badge.svg?branch=master)](https://coveralls.io/r/openstreetmap/openstreetmap-website?branch=master)\n\nThis is `openstreetmap-website`, the [Ruby on Rails](http://rubyonrails.org/)\napplication that powers the [OpenStreetMap](https://www.openstreetmap.org) website and API.\n\nThis repository consists of:","metadata":{"source":"https://github.com/openstreetmap/openstreetmap-website","loc":{"lines":{"from":1,"to":10}}}}],["54",{"pageContent":"This is `openstreetmap-website`, the [Ruby on Rails](http://rubyonrails.org/)\napplication that powers the [OpenStreetMap](https://www.openstreetmap.org) website and API.\n\nThis repository consists of:\n\n* The web site, including user accounts, diary entries, user-to-user messaging.\n* The XML- and JSON-based editing [API](https://wiki.openstreetmap.org/wiki/API_v0.6).\n* The integrated version of the [iD](https://wiki.openstreetmap.org/wiki/ID) editor.\n* The Browse pages - a web front-end to the OpenStreetMap data.\n* The GPX uploads, browsing and API.\n\nA fully-functional `openstreetmap-website` installation depends on other services, including map tile\nservers and geocoding services, that are provided by other software. The default installation\nuses publicly-available services to help with development and testing.\n\n# License","metadata":{"source":"https://github.com/openstreetmap/openstreetmap-website","loc":{"lines":{"from":10,"to":25}}}}],["55",{"pageContent":"# License\n\nThis software is licensed under the [GNU General Public License 2.0](https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt),\na copy of which can be found in the [LICENSE](LICENSE) file.\n\n# Installation\n\n`openstreetmap-website` is a Ruby on Rails application that uses PostgreSQL as its database, and has a large\nnumber of dependencies for installation. For full details please see [INSTALL.md](INSTALL.md).\n\n# Development\n\nWe're always keen to have more developers! Pull requests are very welcome.","metadata":{"source":"https://github.com/openstreetmap/openstreetmap-website","loc":{"lines":{"from":25,"to":37}}}}],["56",{"pageContent":"# Development\n\nWe're always keen to have more developers! Pull requests are very welcome.\n\n* Bugs are recorded in the [issue tracker](https://github.com/openstreetmap/openstreetmap-website/issues).\n* Translation is managed by [Translatewiki](https://translatewiki.net/wiki/Translating:OpenStreetMap).\n* Local Chapters shown on the Communities page, and their translations, come from [osm-community-index](https://github.com/osmlab/osm-community-index).\n* There is a [rails-dev@openstreetmap.org](https://lists.openstreetmap.org/listinfo/rails-dev) mailing list for development discussion.\n* IRC - there is the #osm-dev channel on irc.oftc.net.\n\nMore details on contributing to the code are in the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n\n# Maintainers\n\n* Tom Hughes [@tomhughes](https://github.com/tomhughes/)\n* Andy Allan [@gravitystorm](https://github.com/gravitystorm/)","metadata":{"source":"https://github.com/openstreetmap/openstreetmap-website","loc":{"lines":{"from":37,"to":52}}}}],["57",{"pageContent":"# Tilemaker\n\nTilemaker creates vector tiles (in Mapbox Vector Tile format) from an .osm.pbf planet extract, as typically downloaded from providers like Geofabrik. It aims to be 'stack-free': you need no database and there is only one executable to install.\n\nVector tiles are used by many in-browser/app renderers, and can also power server-side raster rendering. They enable on-the-fly style changes and greater interactivity, while imposing less of a storage burden. You can output them to individual files, or to a SQLite (.mbtiles) database.\n\nSee an example of a vector tile map produced by tilemaker at [tilemaker.org](https://tilemaker.org).\n\n![Continuous Integration](https://github.com/systemed/tilemaker/workflows/Continuous%20Integration/badge.svg)","metadata":{"source":"https://github.com/systemed/tilemaker","loc":{"lines":{"from":1,"to":9}}}}],["58",{"pageContent":"Installing\n\nTilemaker is written in C++14. The chief dependencies are:\n\n* Google Protocol Buffers\n* Boost (latest version advised, 1.66 minimum)\n* Lua (5.1 or later) or LuaJIT\n* sqlite3\n* shapelib\n* rapidjson\n\nsqlite_modern_cpp, and kaguya are bundled in the include/ directory.\n\nYou can then simply install with:\n\n    make\n    sudo make install\n\t\nFor detailed installation instructions for your operating system, see [INSTALL.md](docs/INSTALL.md).","metadata":{"source":"https://github.com/systemed/tilemaker","loc":{"lines":{"from":11,"to":29}}}}],["59",{"pageContent":"Out-of-the-box setup\n\nTilemaker comes with configuration files compatible with the popular [OpenMapTiles](https://openmaptiles.org) schema, and a demonstration map server. You'll run tilemaker to make vector tiles from your `.osm.pbf` source data. To create the tiles, run this from the tilemaker directory:\n\n    tilemaker --input /path/to/your/input.osm.pbf \\\n        --output /path/to/your/output.mbtiles\n\nIf you want to include sea tiles, then create a directory called `coastline` in the same place you're running tilemaker from, and then save the files from https://osmdata.openstreetmap.de/download/water-polygons-split-4326.zip in it, such that tilemaker can find a file at `coastline/water_polygons.shp`.\n\nThen, to serve your tiles using the demonstration server:\n\n    cd server\n    ruby server.rb /path/to/your/output.mbtiles\n\nYou can now navigate to http://localhost:8080/ and see your map!","metadata":{"source":"https://github.com/systemed/tilemaker","loc":{"lines":{"from":31,"to":45}}}}],["60",{"pageContent":"Then, to serve your tiles using the demonstration server:\n\n    cd server\n    ruby server.rb /path/to/your/output.mbtiles\n\nYou can now navigate to http://localhost:8080/ and see your map!\n\n(If you don't already have them, you'll need to install Ruby and the required gems to run the demonstration server. On Ubuntu, for example, `sudo apt install sqlite3 libsqlite3-dev ruby ruby-dev` and then `sudo gem install sqlite3 cgi glug rack rackup`.)","metadata":{"source":"https://github.com/systemed/tilemaker","loc":{"lines":{"from":45,"to":52}}}}],["61",{"pageContent":"Your own configuration\n\nVector tiles contain (generally thematic) 'layers'. For example, your tiles might contain river, cycleway and railway layers. It's up to you what OSM data goes into each layer. You configure this in tilemaker with two files:\n\n* a JSON file listing each layer, and the zoom levels at which to apply it\n* a Lua program that looks at each node/way's tags, and places it into layers accordingly\n\nYou can read more about these in [CONFIGURATION.md](docs/CONFIGURATION.md).\n\nThe JSON configuration and Lua processing files are specified with `--config` and `--process` respectively. Defaults are config.json and process.lua in the current directory. If there is no config.json and process.lua in the current directory, and you do not specify `--config` and `--process`, an error will result.\n\nRead about tilemaker's runtime options in [RUNNING.md](docs/RUNNING.md).\n\nYou might also find these resources helpful:","metadata":{"source":"https://github.com/systemed/tilemaker","loc":{"lines":{"from":54,"to":67}}}}],["62",{"pageContent":"Read about tilemaker's runtime options in [RUNNING.md](docs/RUNNING.md).\n\nYou might also find these resources helpful:\n\n* Read our [introduction to vector tiles](docs/VECTOR_TILES.md).\n* See a workflow for \"Generating self-hosted maps using tilemaker\" at https://blog.kleunen.nl/blog/tilemaker-generate-map.\n* See https://github.com/mapbox/awesome-vector-tiles for a list of renderers which support vector tiles.","metadata":{"source":"https://github.com/systemed/tilemaker","loc":{"lines":{"from":67,"to":73}}}}],["63",{"pageContent":"Why tilemaker?\n\nYou might use tilemaker if:\n\n* You want to create vector tiles yourself, without a third-party contract\n* You don't want to host/maintain a database\n* You want a flexible system capable of advanced OSM tag processing\n* You want to create ready-to-go tiles for offline use\n\nBut don't use tilemaker if:\n\n* You want someone else to create and host the tiles for you\n* You want the entire planet\n* You want continuous updates with the latest OSM data\n\n## Contributing\n\nBug reports, suggestions and (especially!) pull requests are very welcome on the Github issue tracker. Please check the tracker to see if your issue is already known, and be nice. For questions, please use IRC (irc.oftc.net or https://irc.osm.org, channel #osm-dev) and https://help.osm.org.\n\nFormatting: braces and indents as shown, hard tabs (4sp). (Yes, I know.) Please be conservative about adding dependencies or increasing the memory requirement.","metadata":{"source":"https://github.com/systemed/tilemaker","loc":{"lines":{"from":75,"to":94}}}}],["64",{"pageContent":"Copyright\n\nTilemaker is maintained by Richard Fairhurst and supported by [many contributors](https://github.com/systemed/tilemaker/graphs/contributors).\n\nCopyright tilemaker contributors, 2015-2023. The tilemaker code is licensed as FTWPL; you may do anything you like with this code and there is no warranty. The included sqlite_modern_cpp (Amin Roosta) is MIT; [kaguya](https://github.com/satoren/kaguya) is licensed under the Boost Software Licence.","metadata":{"source":"https://github.com/systemed/tilemaker","loc":{"lines":{"from":96,"to":100}}}}],["65",{"pageContent":"![tileserver-gl](https://cloud.githubusercontent.com/assets/59284/18173467/fa3aa2ca-7069-11e6-86b1-0f1266befeb6.jpeg)\n\n\n# TileServer GL\n[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/maptiler/tileserver-gl/pipeline.yml)](https://github.com/maptiler/tileserver-gl/actions/workflows/pipeline.yml)\n[![Docker Hub](https://img.shields.io/badge/docker-hub-blue.svg)](https://hub.docker.com/r/maptiler/tileserver-gl/)\n\nVector and raster maps with GL styles. Server-side rendering by MapLibre GL Native. Map tile server for MapLibre GL JS, Android, iOS, Leaflet, OpenLayers, GIS via WMTS, etc.\n\nDownload vector tiles from [OpenMapTiles](https://data.maptiler.com/downloads/planet/).","metadata":{"source":"https://github.com/maptiler/tileserver-gl","loc":{"lines":{"from":1,"to":10}}}}],["66",{"pageContent":"Getting Started with Node\n\nMake sure you have Node.js version **14.20.0** or above installed. Node 18 is recommended. (running `node -v` it should output something like `v18.x.x`). Running without docker requires [Native dependencies](https://maptiler-tileserver.readthedocs.io/en/latest/installation.html#npm) to be installed first.\n\nInstall `tileserver-gl` with server-side raster rendering of vector tiles with npm. \n\n```bash\nnpm install -g tileserver-gl\n```\n\nOnce installed, you can use it like the following examples.\n\nusing a mbtiles file\n```bash\nwget https://github.com/maptiler/tileserver-gl/releases/download/v1.3.0/zurich_switzerland.mbtiles\ntileserver-gl --mbtiles zurich_switzerland.mbtiles\n[in your browser, visit http://[server ip]:8080]\n```\n\nusing a config.json + style + mbtiles file\n```bash\nwget https://github.com/maptiler/tileserver-gl/releases/download/v1.3.0/test_data.zip\nunzip test_data.zip\ntileserver-gl\n[in your browser, visit http://[server ip]:8080]","metadata":{"source":"https://github.com/maptiler/tileserver-gl","loc":{"lines":{"from":11,"to":35}}}}],["67",{"pageContent":"Alternatively, you can use the `tileserver-gl-light` npm package instead, which is pure javascript, does not have any native dependencies, and can run anywhere, but does not contain rasterization on the server side made with Maplibre GL Native.","metadata":{"source":"https://github.com/maptiler/tileserver-gl","loc":{"lines":{"from":38,"to":38}}}}],["68",{"pageContent":"Getting Started with Docker\n\nAn alternative to npm to start the packed software easier is to install [Docker](https://www.docker.com/) on your computer and then run from the tileserver-gl directory\n\nExample using a mbtiles file\n```bash\nwget https://github.com/maptiler/tileserver-gl/releases/download/v1.3.0/zurich_switzerland.mbtiles\ndocker run --rm -it -v $(pwd):/data -p 8080:8080 maptiler/tileserver-gl --mbtiles zurich_switzerland.mbtiles\n[in your browser, visit http://[server ip]:8080]\n```\n\nExample using a config.json + style + mbtiles file\n```bash\nwget https://github.com/maptiler/tileserver-gl/releases/download/v1.3.0/test_data.zip\nunzip test_data.zip\ndocker run --rm -it -v $(pwd):/data -p 8080:8080 maptiler/tileserver-gl\n[in your browser, visit http://[server ip]:8080]","metadata":{"source":"https://github.com/maptiler/tileserver-gl","loc":{"lines":{"from":40,"to":56}}}}],["69",{"pageContent":"Example using a different path\n```bash\ndocker run --rm -it -v /your/local/config/path:/data -p 8080:8080 maptiler/tileserver-gl\n```\nreplace '/your/local/config/path' with the path to your config file\n\n\nAlternatively, you can use the `maptiler/tileserver-gl-light` docker image instead, which is pure javascript, does not have any native dependencies, and can run anywhere, but does not contain rasterization on the server side made with Maplibre GL Native.","metadata":{"source":"https://github.com/maptiler/tileserver-gl","loc":{"lines":{"from":59,"to":66}}}}],["70",{"pageContent":"Getting Started with Linux cli\n\nTest from command line\n```bash\nwget https://github.com/maptiler/tileserver-gl/releases/download/v1.3.0/test_data.zip\nunzip -q test_data.zip -d test_data\nxvfb-run --server-args=\"-screen 0 1024x768x24\" npm test\n```\n\nRun from command line\n```bash\nxvfb-run --server-args=\"-screen 0 1024x768x24\" node .\n```\n\n## Documentation\n\nYou can read the full documentation of this project at https://maptiler-tileserver.readthedocs.io/.\n\n## Alternative\n\nDiscover MapTiler Server if you need a [map server with easy setup and user-friendly interface](https://www.maptiler.com/server/).","metadata":{"source":"https://github.com/maptiler/tileserver-gl","loc":{"lines":{"from":68,"to":88}}}}],["71",{"pageContent":"# React Leaflet [![npm version](https://img.shields.io/npm/v/react-leaflet.svg)](https://www.npmjs.com/package/react-leaflet)\n\nReact components for Leaflet maps.\n\n## [Documentation](https://react-leaflet.js.org)\n\n- [Getting started](https://react-leaflet.js.org/docs/start-introduction)\n- [API reference](https://react-leaflet.js.org/docs/api-map)\n\n## Changes\n\nSee the [CHANGELOG file](CHANGELOG.md).\n\n## Contributing\n\nSee the [CONTRIBUTING file](CONTRIBUTING.md).\n\n## Support\n\nPlease **do not** use GitHub issues for support, but instead post your questions on [StackOverflow](https://stackoverflow.com/) using the [`react-leaflet` tag](https://stackoverflow.com/questions/tagged/react-leaflet).\n\n## License\n\nHippocratic License - see the [LICENSE file](LICENSE.md).","metadata":{"source":"https://github.com/PaulLeCam/react-leaflet","loc":{"lines":{"from":1,"to":24}}}}],["72",{"pageContent":"[![Build Status](https://github.com/aviklai/react-leaflet-google-layer/actions/workflows/ci.yml/badge.svg)](https://github.com/aviklai/react-leaflet-google-layer/actions/workflows/ci.yml) \n[![Coverage Status](https://coveralls.io/repos/github/aviklai/react-leaflet-google-layer/badge.svg?branch=master)](https://coveralls.io/github/aviklai/react-leaflet-google-layer?branch=master) \n[![npm version](https://img.shields.io/npm/v/react-leaflet-google-layer.svg)](https://www.npmjs.com/package/react-leaflet-google-layer)\n\nGoogle layer for React Leaflet v3 and v4 using leaflet.gridlayer.googlemutant, implemented with typescript.\n\n## Requirements\nThe current version of this library supports React Leaflet v3 and v4. <br/>\nIf you are using React Leaflet v2, please use the previous version of this library. Please see the documentation here: <br/>\nhttps://github.com/aviklai/react-leaflet-google-layer/tree/v1","metadata":{"source":"https://github.com/aviklai/react-leaflet-google-layer","loc":{"lines":{"from":1,"to":10}}}}],["73",{"pageContent":"Installation instructions:\n1. run `npm install --save react-leaflet-google-layer`\n2. By default this library uses the google-maps loader library to load the google maps api. If you want to use the script tag instead, you can Add google maps js api in your index.html: <br/> \n`<script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY\" async defer></script>` <br/>\nand set the prop useGoogMapsLoader to `false`.\n\n\nUsage example:\n```\nimport * as React from 'react';\nimport { MapContainer } from 'react-leaflet';\nimport ReactLeafletGoogleLayer from 'react-leaflet-google-layer';\n\nexport const App = () => { \n  return (\n      <MapContainer zoom={15} center={[45, 20]}>\n        <ReactLeafletGoogleLayer apiKey='YOUR_API_KEY' type={'satellite'} />\n      </MapContainer>\n  );\n};\n\n```\n\n## Basic usage example\nhttps://codesandbox.io/s/basic-usage-with-react-leaflet-v3-vx8fd","metadata":{"source":"https://github.com/aviklai/react-leaflet-google-layer","loc":{"lines":{"from":12,"to":36}}}}],["74",{"pageContent":"Basic usage example\nhttps://codesandbox.io/s/basic-usage-with-react-leaflet-v3-vx8fd\n\n## Options\napiKey?: string <br/>\nuseGoogMapsLoader?: boolean, default: `true` <br/>\ngoogleMapsAddLayers?: { name: 'BicyclingLayer' | 'TrafficLayer' | 'TransitLayer', options?: any }[] <br/>\nzIndex?: number <br/>\n\n#### From js-api-loader (https://github.com/googlemaps/js-api-loader) - googleMapsLoaderConf prop:\n* version?: string\n* client?: string\n* channel?: string\n* language?: string\n* region?: string\n* libraries?: string[]\n\n#### From googlemutant (https://gitlab.com/IvanSanchez/Leaflet.GridLayer.GoogleMutant):\n* minZoom?: number\n* maxZoom?: number\n* maxNativeZoom?: number\n* tileSize?: number | Point\n* subdomains?: string | string[]\n* errorTileUrl?: string\n* attribution?: string\n* opacity?: number\n* continuousWorld?: boolean\n* noWrap?: boolean\n* type?: 'roadmap' | 'satellite' | 'terrain' | 'hybrid'\n* styles?: GoogleMutantStyle[]","metadata":{"source":"https://github.com/aviklai/react-leaflet-google-layer","loc":{"lines":{"from":36,"to":65}}}}],["75",{"pageContent":"# Community Geocoder\n\nオープンソースのジオコーディング API です。\n\n経産省の [IMI コンポーネントツール](https://info.gbiz.go.jp/tools/imi_tools/)のジオコーディングの仕組みからインスピレーションをうけて開発しました。\n\nデモ: https://community-geocoder.geolonia.com/\n\n[無料で利用できてオープンソースの、住所から緯度経度を検索するためのジオコーディング API を公開しました。](https://blog.geolonia.com/2020/06/01/community-geocoder.html)\n\n## 特徴\n\n* 国土交通省の位置参照情報の「街区レベル位置参照情報」および「大字・町丁目レベル位置参照情報」を利用したジオコーディングサービスです。\n  * JavaScript API と緯度経度の API を提供しています。\n* オープンソースなので誰でもフォークすることができ、利用規約の変更などを気にすることなく、安心して利用することができます。\n* ソースコードのライセンスは MIT ライセンスです。取得した位置情報のご利用はご自由にどうぞ。","metadata":{"source":"https://github.com/geolonia/community-geocoder","loc":{"lines":{"from":1,"to":16}}}}],["76",{"pageContent":"仕組み\n\nGeoloniaの住所正規化ライブラリ[@geolonia/normalize-japanese-addresses](https://github.com/geolonia/normalize-japanese-addresses)を利用して、緯度経度を取得したい住所を正規化（都道府県、市区町村、町丁目などに分解する）した上で、緯度経度を取得します。\n\n* 正規化が途中までしかできず、市区町村名までしか判別できなかった場合は、[@geolonia/jisx0402](https://github.com/geolonia/jisx0402)を使って市区町村名から市区町村コードを取得し、[@geolonia/japanese-admins](https://github.com/geolonia/japanese-admins)を使って市区町村コードから緯度・経度を取得しています。\n* 都道府県名までしか判別できなかった場合は、[@geolonia/japanese-prefectural-capitals](https://github.com/geolonia/japanese-prefectural-capitals)を使って県庁所在地の緯度・経度を取得しています。","metadata":{"source":"https://github.com/geolonia/community-geocoder","loc":{"lines":{"from":18,"to":23}}}}],["77",{"pageContent":"使い方\n\n以下の JavaScript API をウェブページから読み込んでください。\n\n```html\n<script src=\"https://cdn.geolonia.com/community-geocoder.js\"></script>\n```\n\nAPI 関数 `getLatLng()` を任意のクリックイベント等でコールしてください。\n\n```javascript\ndocument.getElementById('exec').addEventListener('click', () => {\n  if (document.getElementById('address').value) {\n    getLatLng(document.getElementById('address').value, (latlng) => {\n      map.setCenter(latlng)\n    })\n  }\n})\n```","metadata":{"source":"https://github.com/geolonia/community-geocoder","loc":{"lines":{"from":25,"to":43}}}}],["78",{"pageContent":"`getLatLng(address, callback, errorCallback)`\n\n* `address` - 緯度経度を取得したい住所の文字列\n* `callback` - 緯度経度を取得したあとで実行したいコールバック関数。コールバック関数の第一引き数には緯度経度のオブジェクトが渡されます。\n* `errorCallback` - エラー時のコールバック関数。エラーオブジェクトが引き数として渡されます。\n\n住所の文字列として「東京都千代田区霞が関1-3-1」を渡した場合、コールバック関数に引き数として渡される緯度経度のオブジェクトは以下のようになっています。\n\n```javascript\n{\n  addr: \"3-1\"\n  city: \"千代田区\"\n  lat: 35.673944\n  level: 3\n  lng: 139.752558\n  pref: \"東京都\"\n  town: \"霞が関一丁目\"\n}\n```\n\n* `addr` - 都道府県名、市区町村名、町丁目を除いた残りの住所\n* `city` - 市区町村名\n* `lat` - 緯度\n* `level` - 正規化レベル。住所文字列のどこまでを判別できたかを以下の数値で表しています。\n  * 0 - 都道府県も判別できなかった。\n  * 1 - 都道府県まで判別できた。\n  * 2 - 市区町村まで判別できた。\n  * 3 - 町丁目まで判別できた。\n* `lng` - 経度\n* `pref` - 都道府県名\n* `town` - 町丁目","metadata":{"source":"https://github.com/geolonia/community-geocoder","loc":{"lines":{"from":45,"to":75}}}}],["79",{"pageContent":"開発者向け情報\n\nまず、以下のコマンドで環境を用意してください。\n\n```\n$ git clone git@github.com:geolonia/community-geocoder.git\n$ cd community-geocoder\n$ npm install\n```\n\n### JavaScript API の開発方法\n\n`src/api.js` がこのサービスで提供される JavaScript API のソースです。 以下のコマンドでブラウザで確認しながら作業できます。\n\n```\n$ npm start\n```\n\nプルリクエストはいつでも歓迎します。\n\n## ライセンス、利用規約\n\n* ソースコードのライセンスは MIT ライセンスです。\n* 取得した緯度経度の情報のご利用方法に制限はありません。他社の地図、アプリ、その他ご自由にご利用ください。\n* ご利用に際しましては、できればソーシャルでのシェア、[Geolonia](https://geolonia.com/) へのリンクの設置などをしていただけると、開発者たちのモチベーションが上がると思います。\n\nプルリクや Issue は大歓迎です。住所の正規化を工夫すれば精度があがりそうなので、そのあたりのアイデアを募集しています。","metadata":{"source":"https://github.com/geolonia/community-geocoder","loc":{"lines":{"from":77,"to":103}}}}],["80",{"pageContent":"tippecanoe\n==========\n\nBuilds [vector tilesets](https://www.mapbox.com/developers/vector-tiles/) from large (or small) collections of [GeoJSON](http://geojson.org/), [Geobuf](https://github.com/mapbox/geobuf), or [CSV](https://en.wikipedia.org/wiki/Comma-separated_values) features,\n[like these](MADE_WITH.md).\n\n![Mapbox Tippecanoe](https://user-images.githubusercontent.com/1951835/36568734-ede27ec0-17df-11e8-8c22-ffaaebb8daf4.JPG)\n\n[![Build Status](https://travis-ci.org/mapbox/tippecanoe.svg)](https://travis-ci.org/mapbox/tippecanoe)\n[![Coverage Status](https://codecov.io/gh/mapbox/tippecanoe/branch/master/graph/badge.svg)](https://codecov.io/gh/mapbox/tippecanoe)","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":1,"to":10}}}}],["81",{"pageContent":":zap: Mapbox has a new service for creating vector tilesets! :zap:\n\n[Mapbox Tiling Service (MTS)](https://docs.mapbox.com/mapbox-tiling-service/overview/) is a hosted, data processing service that allows you to integrate custom datasets of any scale into your maps faster, cheaper, and with more flexibility and control than previously possible.\n\nMTS is the same service we use internally to create our global, daily updating basemap product Mapbox Streets, which serves over 650 million monthly active users and customers such as Facebook, Snap, the Weather Channel, Tableau, and Shopify. \n\nMTS creates and updates data using distributed and parallelized processing, meaning data is processed much more quickly than is possible with a standard, single server setup with comparable tools. For example, a global basemap at 30cm precision (max zoom of 16) can be processed in under 2 hours with MTS, whereas a comparable workload would take multiple days to process on a single server.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":12,"to":18}}}}],["82",{"pageContent":"Customers like AllTrails, Plume Labs, and Ookla have noted that MTS helps them:\n- build applications faster by focusing more on app development, not infrastructure\n- build more compelling user experiences that drive better user engagement\n- get updated data to their users faster—in some cases up to 90% faster than previous tools\n\nLearn more about [MTS](https://blog.mapbox.com/introducing-mapbox-tiling-service-df1df636c7cf).\n\nIntent\n------\n\nThe goal of Tippecanoe is to enable making a scale-independent view of your data,\nso that at any level from the entire world to a single building, you can see\nthe density and texture of the data rather than a simplification from dropping\nsupposedly unimportant features or clustering or aggregating them.\n\nIf you give it all of OpenStreetMap and zoom out, it should give you back\nsomething that looks like \"[All Streets](http://benfry.com/allstreets/map5.html)\"\nrather than something that looks like an Interstate road atlas.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":20,"to":37}}}}],["83",{"pageContent":"If you give it all the building footprints in Los Angeles and zoom out\nfar enough that most individual buildings are no longer discernable, you\nshould still be able to see the extent and variety of development in every neighborhood,\nnot just the largest downtown buildings.\n\nIf you give it a collection of years of tweet locations, you should be able to\nsee the shape and relative popularity of every point of interest and every\nsignificant travel corridor.\n\nInstallation\n------------\n\nThe easiest way to install tippecanoe on OSX is with [Homebrew](http://brew.sh/):\n\n```sh\n$ brew install tippecanoe","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":39,"to":54}}}}],["84",{"pageContent":"On Ubuntu it will usually be easiest to build from the source repository:\n\n```sh\n$ git clone https://github.com/mapbox/tippecanoe.git\n$ cd tippecanoe\n$ make -j\n$ make install\n```\n\nSee [Development](#development) below for how to upgrade your\nC++ compiler or install prerequisite packages if you get\ncompiler errors.\n\nUsage\n-----\n\n```sh\n$ tippecanoe -o file.mbtiles [options] [file.json file.json.gz file.geobuf ...]\n```\n\nIf no files are specified, it reads GeoJSON from the standard input.\nIf multiple files are specified, each is placed in its own layer.\n\nThe GeoJSON features need not be wrapped in a FeatureCollection.\nYou can concatenate multiple GeoJSON features or files together,\nand it will parse out the features and ignore whatever other objects\nit encounters.\n\nTry this first\n--------------\n\nIf you aren't sure what options to use, try this:\n\n```sh\n$ tippecanoe -zg -o out.mbtiles --drop-densest-as-needed in.geojson","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":57,"to":91}}}}],["85",{"pageContent":"The `-zg` option will make Tippecanoe choose a maximum zoom level that should be\nhigh enough to reflect the precision of the original data. (If it turns out still\nnot to be as detailed as you want, use `-z` manually with a higher number.)\n\nIf the tiles come out too big, the `--drop-densest-as-needed` option will make\nTippecanoe try dropping what should be the least visible features at each zoom level.\n(If it drops too many features, use `-x` to leave out some feature attributes that\nyou didn't really need.)\n\nExamples\n--------\n\nCreate a tileset of TIGER roads for Alameda County, to zoom level 13, with a custom layer name and description:\n\n```sh\n$ tippecanoe -o alameda.mbtiles -l alameda -n \"Alameda County from TIGER\" -z13 tl_2014_06001_roads.json","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":94,"to":109}}}}],["86",{"pageContent":"Create a tileset of all TIGER roads, at only zoom level 12, but with higher detail than normal,\nwith a custom layer name and description, and leaving out the `LINEARID` and `RTTYP` attributes:\n\n```\n$ cat tiger/tl_2014_*_roads.json | tippecanoe -o tiger.mbtiles -l roads -n \"All TIGER roads, one zoom\" -z12 -Z12 -d14 -x LINEARID -x RTTYP\n```\n\nCookbook\n--------","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":112,"to":120}}}}],["87",{"pageContent":"Linear features (world railroads), visible at all zoom levels\n\n```\ncurl -L -O https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_railroads.zip\nunzip ne_10m_railroads.zip\nogr2ogr -f GeoJSON ne_10m_railroads.geojson ne_10m_railroads.shp\n\ntippecanoe -zg -o ne_10m_railroads.mbtiles --drop-densest-as-needed --extend-zooms-if-still-dropping ne_10m_railroads.geojson\n```\n\n* `-zg`: Automatically choose a maxzoom that should be sufficient to clearly distinguish the features and the detail within each feature\n* `--drop-densest-as-needed`: If the tiles are too big at low zoom levels, drop the least-visible features to allow tiles to be created with those features that remain\n* `--extend-zooms-if-still-dropping`: If even the tiles at high zoom levels are too big, keep adding zoom levels until one is reached that can represent all the features","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":122,"to":134}}}}],["88",{"pageContent":"Discontinuous polygon features (buildings of Rhode Island), visible at all zoom levels\n\n```\ncurl -L -O https://usbuildingdata.blob.core.windows.net/usbuildings-v1-1/RhodeIsland.zip\nunzip RhodeIsland.zip\n\ntippecanoe -zg -o RhodeIsland.mbtiles --drop-densest-as-needed --extend-zooms-if-still-dropping RhodeIsland.geojson\n```\n\n* `-zg`: Automatically choose a maxzoom that should be sufficient to clearly distinguish the features and the detail within each feature\n* `--drop-densest-as-needed`: If the tiles are too big at low or medium zoom levels, drop the least-visible features to allow tiles to be created with those features that remain\n* `--extend-zooms-if-still-dropping`: If even the tiles at high zoom levels are too big, keep adding zoom levels until one is reached that can represent all the features","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":136,"to":147}}}}],["89",{"pageContent":"Continuous polygon features (states and provinces), visible at all zoom levels\n\n```\ncurl -L -O https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_1_states_provinces.zip\nunzip -o ne_10m_admin_1_states_provinces.zip\nogr2ogr -f GeoJSON ne_10m_admin_1_states_provinces.geojson ne_10m_admin_1_states_provinces.shp\n\ntippecanoe -zg -o ne_10m_admin_1_states_provinces.mbtiles --coalesce-densest-as-needed --extend-zooms-if-still-dropping ne_10m_admin_1_states_provinces.geojson","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":149,"to":156}}}}],["90",{"pageContent":"* `-zg`: Automatically choose a maxzoom that should be sufficient to clearly distinguish the features and the detail within each feature\n* `--coalesce-densest-as-needed`: If the tiles are too big at low or medium zoom levels, merge as many features together as are necessary to allow tiles to be created with those features that are still distinguished\n* `--extend-zooms-if-still-dropping`: If even the tiles at high zoom levels are too big, keep adding zoom levels until one is reached that can represent all the features","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":159,"to":161}}}}],["91",{"pageContent":"Large point dataset (GPS bus locations), for visualization at all zoom levels\n\n```\ncurl -L -O ftp://avl-data.sfmta.com/avl_data/avl_raw/sfmtaAVLRawData01012013.csv\nsed 's/PREDICTABLE.*/PREDICTABLE/' sfmtaAVLRawData01012013.csv > sfmta.csv\ntippecanoe -zg -o sfmta.mbtiles --drop-densest-as-needed --extend-zooms-if-still-dropping sfmta.csv\n```\n\n(The `sed` line is to clean the corrupt CSV header, which contains the wrong number of fields.)\n\n* `-zg`: Automatically choose a maxzoom that should be sufficient to clearly distinguish the features and the detail within each feature\n* `--drop-densest-as-needed`: If the tiles are too big at low or medium zoom levels, drop the least-visible features to allow tiles to be created with those features that remain\n* `--extend-zooms-if-still-dropping`: If even the tiles at high zoom levels are too big, keep adding zoom levels until one is reached that can represent all the features","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":163,"to":175}}}}],["92",{"pageContent":"Clustered points (world cities), summing the clustered population, visible at all zoom levels\n\n```\ncurl -L -O https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_populated_places.zip\nunzip -o ne_10m_populated_places.zip\nogr2ogr -f GeoJSON ne_10m_populated_places.geojson ne_10m_populated_places.shp\n\ntippecanoe -zg -o ne_10m_populated_places.mbtiles -r1 --cluster-distance=10 --accumulate-attribute=POP_MAX:sum ne_10m_populated_places.geojson","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":177,"to":184}}}}],["93",{"pageContent":"* `-zg`: Automatically choose a maxzoom that should be sufficient to clearly distinguish the features and the detail within each feature\n* `-r1`: Do not automatically drop a fraction of points at low zoom levels, since clustering will be used instead\n* `--cluster-distance=10`: Cluster together features that are closer than about 10 pixels from each other\n* `--accumulate-attribute=POP_MAX:sum`: Sum the `POP_MAX` (population) attribute in features that are clustered together. Other attributes will be arbitrarily taken from the first feature in the cluster.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":187,"to":190}}}}],["94",{"pageContent":"Show countries at low zoom levels but states at higher zoom levels\n\n```\ncurl -L -O https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_0_countries.zip\nunzip ne_10m_admin_0_countries.zip\nogr2ogr -f GeoJSON ne_10m_admin_0_countries.geojson ne_10m_admin_0_countries.shp\n\ncurl -L -O https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_1_states_provinces.zip\nunzip -o ne_10m_admin_1_states_provinces.zip\nogr2ogr -f GeoJSON ne_10m_admin_1_states_provinces.geojson ne_10m_admin_1_states_provinces.shp\n\ntippecanoe -z3 -o countries-z3.mbtiles --coalesce-densest-as-needed ne_10m_admin_0_countries.geojson\ntippecanoe -zg -Z4 -o states-Z4.mbtiles --coalesce-densest-as-needed --extend-zooms-if-still-dropping ne_10m_admin_1_states_provinces.geojson\ntile-join -o states-countries.mbtiles countries-z3.mbtiles states-Z4.mbtiles","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":192,"to":205}}}}],["95",{"pageContent":"Countries:\n\n* `-z3`: Only generate zoom levels 0 through 3\n* `--coalesce-densest-as-needed`: If the tiles are too big at low or medium zoom levels, merge as many features together as are necessary to allow tiles to be created with those features that are still distinguished\n\nStates and Provinces:\n\n* `-Z4`: Only generate zoom levels 4 and beyond\n* `-zg`: Automatically choose a maxzoom that should be sufficient to clearly distinguish the features and the detail within each feature\n* `--coalesce-densest-as-needed`: If the tiles are too big at low or medium zoom levels, merge as many features together as are necessary to allow tiles to be created with those features that are still distinguished\n* `--extend-zooms-if-still-dropping`: If even the tiles at high zoom levels are too big, keep adding zoom levels until one is reached that can represent all the features","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":208,"to":218}}}}],["96",{"pageContent":"Represent multiple sources (Illinois and Indiana counties) as separate layers\n\n```\ncurl -L -O https://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_17_county10.zip\nunzip tl_2010_17_county10.zip\nogr2ogr -f GeoJSON tl_2010_17_county10.geojson tl_2010_17_county10.shp\n\ncurl -L -O https://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_18_county10.zip\nunzip tl_2010_18_county10.zip\nogr2ogr -f GeoJSON tl_2010_18_county10.geojson tl_2010_18_county10.shp\n\ntippecanoe -zg -o counties-separate.mbtiles --coalesce-densest-as-needed --extend-zooms-if-still-dropping tl_2010_17_county10.geojson tl_2010_18_county10.geojson","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":220,"to":231}}}}],["97",{"pageContent":"* `-zg`: Automatically choose a maxzoom that should be sufficient to clearly distinguish the features and the detail within each feature\n* `--coalesce-densest-as-needed`: If the tiles are too big at low or medium zoom levels, merge as many features together as are necessary to allow tiles to be created with those features that are still distinguished\n* `--extend-zooms-if-still-dropping`: If even the tiles at high zoom levels are too big, keep adding zoom levels until one is reached that can represent all the features","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":231,"to":233}}}}],["98",{"pageContent":"Merge multiple sources (Illinois and Indiana counties) into the same layer\n\n```\ncurl -L -O https://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_17_county10.zip\nunzip tl_2010_17_county10.zip\nogr2ogr -f GeoJSON tl_2010_17_county10.geojson tl_2010_17_county10.shp\n\ncurl -L -O https://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_18_county10.zip\nunzip tl_2010_18_county10.zip\nogr2ogr -f GeoJSON tl_2010_18_county10.geojson tl_2010_18_county10.shp\n\ntippecanoe -zg -o counties-merged.mbtiles -l counties --coalesce-densest-as-needed --extend-zooms-if-still-dropping tl_2010_17_county10.geojson tl_2010_18_county10.geojson\n```\n\nAs above, but\n\n* `-l counties`: Specify the layer name instead of letting it be derived from the source file names","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":310,"to":326}}}}],["99",{"pageContent":"Selectively remove and replace features (Census tracts) to update a tileset\n\n```\n# Retrieve and tile California 2000 Census tracts\ncurl -L -O https://www2.census.gov/geo/tiger/TIGER2010/TRACT/2000/tl_2010_06_tract00.zip\nunzip tl_2010_06_tract00.zip\nogr2ogr -f GeoJSON tl_2010_06_tract00.shp.json tl_2010_06_tract00.shp\ntippecanoe -z11 -o tracts.mbtiles -l tracts tl_2010_06_tract00.shp.json\n\n# Create a copy of the tileset, minus Alameda County (FIPS code 001)\ntile-join -j '{\"*\":[\"none\",[\"==\",\"COUNTYFP00\",\"001\"]]}' -f -o tracts-filtered.mbtiles tracts.mbtiles\n\n# Retrieve and tile Alameda County Census tracts for 2010\ncurl -L -O https://www2.census.gov/geo/tiger/TIGER2010/TRACT/2010/tl_2010_06001_tract10.zip\nunzip tl_2010_06001_tract10.zip\nogr2ogr -f GeoJSON tl_2010_06001_tract10.shp.json tl_2010_06001_tract10.shp\ntippecanoe -z11 -o tracts-added.mbtiles -l tracts tl_2010_06001_tract10.shp.json","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":328,"to":344}}}}],["100",{"pageContent":"# Merge the filtered tileset and the tileset of new tracts into a final tileset\ntile-join -o tracts-final.mbtiles tracts-filtered.mbtiles tracts-added.mbtiles","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":346,"to":347}}}}],["101",{"pageContent":"The `-z11` option explicitly specifies the maxzoom, to make sure both the old and new tilesets have the same zoom range.\n\nThe `-j` option to `tile-join` specifies a filter, so that only the desired features will be copied to the new tileset.\nThis filter excludes (using `none`) any features whose FIPS code (`COUNTYFP00`) is the code for Alameda County (`001`).\n\nOptions\n-------\n\nThere are a lot of options. A lot of the time you won't want to use any of them\nother than `-o` _output_`.mbtiles` to name the output file, and probably `-f` to\ndelete the file that already exists with that name.\n\nIf you aren't sure what the right maxzoom is for your data, `-zg` will guess one for you\nbased on the density of features.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":350,"to":363}}}}],["102",{"pageContent":"If you aren't sure what the right maxzoom is for your data, `-zg` will guess one for you\nbased on the density of features.\n\nTippecanoe will normally drop a fraction of point features at zooms below the maxzoom,\nto keep the low-zoom tiles from getting too big. If you have a smaller data set where\nall the points would fit without dropping any of them, use `-r1` to keep them all.\nIf you do want point dropping, but you still want the tiles to be denser than `-zg`\nthinks they should be, use `-B` to set a basezoom lower than the maxzoom.\n\nIf some of your tiles are coming out too big in spite of the settings above, you will\noften want to use `--drop-densest-as-needed` to drop whatever fraction of the features\nis necessary at each zoom level to make that zoom level's tiles work.\n\nIf your features have a lot of attributes, use `-y` to keep only the ones you really need.\n\nIf your input is formatted as newline-delimited GeoJSON, use `-P` to make input parsing a lot faster.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":363,"to":378}}}}],["103",{"pageContent":"Output tileset\n\n * `-o` _file_`.mbtiles` or `--output=`_file_`.mbtiles`: Name the output file.\n * `-e` _directory_ or `--output-to-directory`=_directory_: Write tiles to the specified *directory* instead of to an mbtiles file.\n * `-f` or `--force`: Delete the mbtiles file if it already exists instead of giving an error\n * `-F` or `--allow-existing`: Proceed (without deleting existing data) if the metadata or tiles table already exists\n   or if metadata fields can't be set. You probably don't want to use this.\n\n### Tileset description and attribution\n\n * `-n` _name_ or `--name=`_name_: Human-readable name for the tileset (default file.json)\n * `-A` _text_ or `--attribution=`_text_: Attribution (HTML) to be shown with maps that use data from this tileset.\n * `-N` _description_ or `--description=`_description_: Description for the tileset (default file.mbtiles)","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":380,"to":392}}}}],["104",{"pageContent":"Input files and layer names","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":394,"to":394}}}}],["105",{"pageContent":"* _name_`.json` or _name_`.geojson`: Read the named GeoJSON input file into a layer called _name_.\n * _name_`.json.gz` or _name_`.geojson.gz`: Read the named gzipped GeoJSON input file into a layer called _name_.\n * _name_`.geobuf`: Read the named Geobuf input file into a layer called _name_.\n * _name_`.csv`: Read the named CSV input file into a layer called _name_.\n * `-l` _name_ or `--layer=`_name_: Use the specified layer name instead of deriving a name from the input filename or output tileset. If there are multiple input files\n   specified, the files are all merged into the single named layer, even if they try to specify individual names with `-L`.\n * `-L` _name_`:`_file.json_ or `--named-layer=`_name_`:`_file.json_: Specify layer names for individual files. If your shell supports it, you can use a subshell redirect like `-L` _name_`:<(cat dir/*.json)` to specify a layer name for the output of streamed input.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":396,"to":402}}}}],["106",{"pageContent":"* `-L{`_layer-json_`}` or `--named-layer={`_layer-json_`}`: Specify an input file and layer options by a JSON object. The JSON object must contain a `\"file\"` key to specify the filename to read from. (If the `\"file\"` key is an empty string, it means to read from the standard input stream.) It may also contain a `\"layer\"` field to specify the name of the layer, and/or a `\"description\"` field to specify the layer's description in the tileset metadata, and/or a `\"format\"` field to specify `csv` or `geobuf` file format if it is not obvious from the `name`. Example:","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":403,"to":403}}}}],["107",{"pageContent":"```\ntippecanoe -z5 -o world.mbtiles -L'{\"file\":\"ne_10m_admin_0_countries.json\", \"layer\":\"countries\", \"description\":\"Natural Earth countries\"}'","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":405,"to":406}}}}],["108",{"pageContent":"CSV input files currently support only Point geometries, from columns named `latitude`, `longitude`, `lat`, `lon`, `long`, `lng`, `x`, or `y`.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":409,"to":409}}}}],["109",{"pageContent":"Parallel processing of input\n\n * `-P` or `--read-parallel`: Use multiple threads to read different parts of each GeoJSON input file at once.\n   This will only work if the input is line-delimited JSON with each Feature on its\n   own line, because it knows nothing of the top-level structure around the Features. Spurious \"EOF\" error\n   messages may result otherwise.\n   Performance will be better if the input is a named file that can be mapped into memory\n   rather than a stream that can only be read sequentially.\n\nIf the input file begins with the [RFC 8142](https://tools.ietf.org/html/rfc8142) record separator,\nparallel processing of input will be invoked automatically, splitting at record separators rather\nthan at all newlines.\n\nParallel processing will also be automatic if the input file is in Geobuf format.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":411,"to":424}}}}],["110",{"pageContent":"Projection of input\n\n * `-s` _projection_ or `--projection=`_projection_: Specify the projection of the input data. Currently supported are `EPSG:4326` (WGS84, the default) and `EPSG:3857` (Web Mercator). In general you should use WGS84 for your input files if at all possible.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":426,"to":428}}}}],["111",{"pageContent":"Zoom levels\n\n * `-z` _zoom_ or `--maximum-zoom=`_zoom_: Maxzoom: the highest zoom level for which tiles are generated (default 14)\n * `-zg` or `--maximum-zoom=g`: Guess what is probably a reasonable maxzoom based on the spacing of features.\n * `-Z` _zoom_ or `--minimum-zoom=`_zoom_: Minzoom: the lowest zoom level for which tiles are generated (default 0)\n * `-ae` or `--extend-zooms-if-still-dropping`: Increase the maxzoom if features are still being dropped at that zoom level.\n   The detail and simplification options that ordinarily apply only to the maximum zoom level will apply both to the originally\n   specified maximum zoom and to any levels added beyond that.\n * `-R` _zoom_`/`_x_`/`_y_ or `--one-tile=`_zoom_`/`_x_`/`_y_: Set the minzoom and maxzoom to _zoom_ and produce only\n   the single specified tile at that zoom level.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":430,"to":439}}}}],["112",{"pageContent":"If you know the precision to which you want your data to be represented,\nor the map scale of a corresponding printed map,\nthis table shows the approximate precision and scale corresponding to various\n`-z` options if you use the default `-d` detail of 12:","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":441,"to":444}}}}],["113",{"pageContent":"zoom level | precision (ft) | precision (m) | map scale\n---------- | -------------- | ------------- | ---------\n`-z0` | 32000 ft | 10000 m | 1:320,000,000\n`-z1` | 16000 ft | 5000 m | 1:160,000,000\n`-z2` | 8000 ft | 2500 m | 1:80,000,000\n`-z3` | 4000 ft | 1250 m | 1:40,000,000\n`-z4` | 2000 ft | 600 m | 1:20,000,000\n`-z5` | 1000 ft | 300 m | 1:10,000,000\n`-z6` | 500 ft | 150 m | 1:5,000,000\n`-z7` | 250 ft | 80 m | 1:2,500,000\n`-z8` | 125 ft | 40 m | 1:1,250,000\n`-z9` | 64 ft | 20 m | 1:640,000\n`-z10` | 32 ft | 10 m | 1:320,000\n`-z11` | 16 ft | 5 m | 1:160,000\n`-z12` | 8 ft | 2 m | 1:80,000\n`-z13` | 4 ft | 1 m | 1:40,000\n`-z14` | 2 ft | 0.5 m | 1:20,000\n`-z15` | 1 ft | 0.25 m | 1:10,000\n`-z16` | 6 in | 15 cm | 1:5000\n`-z17` | 3 in | 8 cm | 1:2500\n`-z18` | 1.5 in | 4 cm | 1:1250\n`-z19` | 0.8 in | 2 cm | 1:600\n`-z20` | 0.4 in | 1 cm | 1:300\n`-z21` | 0.2 in | 0.5 cm | 1:150\n`-z22` | 0.1 in | 0.25 cm | 1:75","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":446,"to":470}}}}],["114",{"pageContent":"Tile resolution\n\n * `-d` _detail_ or `--full-detail=`_detail_: Detail at max zoom level (default 12, for tile resolution of 2^12=4096)\n * `-D` _detail_ or `--low-detail=`_detail_: Detail at lower zoom levels (default 12, for tile resolution of 2^12=4096)\n * `-m` _detail_ or `--minimum-detail=`_detail_: Minimum detail that it will try if tiles are too big at regular detail (default 7)\n\nAll internal math is done in terms of a 32-bit tile coordinate system, so 1/(2^32) of the size of Earth,\nor about 1cm, is the smallest distinguishable distance. If _maxzoom_ + _detail_ > 32, no additional\nresolution is obtained than by using a smaller _maxzoom_ or _detail_.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":472,"to":480}}}}],["115",{"pageContent":"Filtering feature attributes\n\n * `-x` _name_ or `--exclude=`_name_: Exclude the named attributes from all features. You can specify multiple `-x` options to exclude several attributes. (Don't comma-separate names within a single `-x`.)\n * `-y` _name_ or `--include=`_name_: Include the named attributes in all features, excluding all those not explicitly named. You can specify multiple `-y` options to explicitly include several attributes. (Don't comma-separate names within a single `-y`.)\n * `-X` or `--exclude-all`: Exclude all attributes and encode only geometries","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":482,"to":486}}}}],["116",{"pageContent":"Modifying feature attributes","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":488,"to":488}}}}],["117",{"pageContent":"* `-T`_attribute_`:`_type_ or `--attribute-type=`_attribute_`:`_type_: Coerce the named feature _attribute_ to be of the specified _type_.\n   The _type_ may be `string`, `float`, `int`, or `bool`.\n   If the type is `bool`, then original attributes of `0` (or, if numeric, `0.0`, etc.), `false`, `null`, or the empty string become `false`, and otherwise become `true`.\n   If the type is `float` or `int` and the original attribute was non-numeric, it becomes `0`.\n   If the type is `int` and the original attribute was floating-point, it is rounded to the nearest integer.\n * `-Y`_attribute_`:`_description_ or `--attribute-description=`_attribute_`:`_description_: Set the `description` for the specified attribute in the tileset metadata to _description_ instead of the usual `String`, `Number`, or `Boolean`.\n * `-E`_attribute_`:`_operation_ or `--accumulate-attribute=`_attribute_`:`_operation_: Preserve the named _attribute_ from features","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":490,"to":496}}}}],["118",{"pageContent":"* `-E`_attribute_`:`_operation_ or `--accumulate-attribute=`_attribute_`:`_operation_: Preserve the named _attribute_ from features\n   that are dropped, coalesced-as-needed, or clustered. The _operation_ may be\n   `sum`, `product`, `mean`, `max`, `min`, `concat`, or `comma`\n   to specify how the named _attribute_ is accumulated onto the attribute of the same name in a feature that does survive.\n * `-pe` or `--empty-csv-columns-are-null`: Treat empty CSV columns as nulls rather than as empty strings.\n * `-aI` or `--convert-stringified-ids-to-numbers`: If a feature ID is the string representation of a number, convert it to a plain number to use as the feature ID.\n * `--use-attribute-for-id=`*name*: Use the attribute with the specified *name* as if it were specified as the feature ID. (If this attribute is a stringified number, you must also use `-aI` to convert it to a number.)","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":496,"to":502}}}}],["119",{"pageContent":"Filtering features by attributes\n\n * `-j` *filter* or `--feature-filter`=*filter*: Check features against a per-layer filter (as defined in the [Mapbox GL Style Specification](https://docs.mapbox.com/mapbox-gl-js/style-spec/#other-filter)) and only include those that match. Any features in layers that have no filter specified will be passed through. Filters for the layer `\"*\"` apply to all layers. The special variable `$zoom` refers to the current zoom level.\n * `-J` *filter-file* or `--feature-filter-file`=*filter-file*: Like `-j`, but read the filter from a file.\n\nExample: to find the Natural Earth countries with low `scalerank` but high `LABELRANK`:\n\n```\ntippecanoe -z5 -o filtered.mbtiles -j '{ \"ne_10m_admin_0_countries\": [ \"all\", [ \"<\", \"scalerank\", 3 ], [ \">\", \"LABELRANK\", 5 ] ] }' ne_10m_admin_0_countries.geojson","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":504,"to":512}}}}],["120",{"pageContent":"Example: to retain only major TIGER roads at low zoom levels:\n\n```\ntippecanoe -o roads.mbtiles -j '{ \"*\": [ \"any\", [ \">=\", \"$zoom\", 11 ], [ \"in\", \"MTFCC\", \"S1100\", \"S1200\" ] ] }' tl_2015_06001_roads.json\n```\n\nTippecanoe also accepts expressions of the form `[ \"attribute-filter\", name, expression ]`, to filter individual feature attributes\ninstead of entire features. For example, you can exclude the road names at low zoom levels by doing\n\n```\ntippecanoe -o roads.mbtiles -j '{ \"*\": [ \"attribute-filter\", \"FULLNAME\", [ \">=\", \"$zoom\", 9 ] ] }' tl_2015_06001_roads.json\n```\n\nAn `attribute-filter` expression itself is always considered to evaluate to `true` (in other words, to retain the feature instead\nof dropping it). If you want to use multiple `attribute-filter` expressions, or to use other expressions to remove features from\nthe same layer, enclose them in an `all` expression so they will all be evaluated.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":515,"to":530}}}}],["121",{"pageContent":"Dropping a fixed fraction of features by zoom level","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":532,"to":532}}}}],["122",{"pageContent":"* `-r` _rate_ or `--drop-rate=`_rate_: Rate at which dots are dropped at zoom levels below basezoom (default 2.5).\n   If you use `-rg`, it will guess a drop rate that will keep at most 50,000 features in the densest tile.\n   You can also specify a marker-width with `-rg`*width* to allow fewer features in the densest tile to\n   compensate for the larger marker, or `-rf`*number* to allow at most *number* features in the densest tile.\n * `-B` _zoom_ or `--base-zoom=`_zoom_: Base zoom, the level at and above which all points are included in the tiles (default maxzoom).\n   If you use `-Bg`, it will guess a zoom level that will keep at most 50,000 features in the densest tile.\n   You can also specify a marker-width with `-Bg`*width* to allow fewer features in the densest tile to\n   compensate for the larger marker, or `-Bf`*number* to allow at most *number* features in the densest tile.\n * `-al` or `--drop-lines`: Let \"dot\" dropping at lower zooms apply to lines too","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":534,"to":542}}}}],["123",{"pageContent":"compensate for the larger marker, or `-Bf`*number* to allow at most *number* features in the densest tile.\n * `-al` or `--drop-lines`: Let \"dot\" dropping at lower zooms apply to lines too\n * `-ap` or `--drop-polygons`: Let \"dot\" dropping at lower zooms apply to polygons too\n * `-K` _distance_ or `--cluster-distance=`_distance_: Cluster points (as with `--cluster-densest-as-needed`, but without the experimental discovery process) that are approximately within _distance_ of each other. The units are tile coordinates within a nominally 256-pixel tile, so the maximum value of 255 allows only one feature per tile. Values around 10 are probably appropriate for typical marker sizes. See `--cluster-densest-as-needed` below for behavior.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":542,"to":545}}}}],["124",{"pageContent":"Dropping a fraction of features to keep under tile size limits","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":547,"to":547}}}}],["125",{"pageContent":"* `-as` or `--drop-densest-as-needed`: If a tile is too large, try to reduce it to under 500K by increasing the minimum spacing between features. The discovered spacing applies to the entire zoom level.\n * `-ad` or `--drop-fraction-as-needed`: Dynamically drop some fraction of features from each zoom level to keep large tiles under the 500K size limit. (This is like `-pd` but applies to the entire zoom level, not to each tile.)\n * `-an` or `--drop-smallest-as-needed`: Dynamically drop the smallest features (physically smallest: the shortest lines or the smallest polygons) from each zoom level to keep large tiles under the 500K size limit. This option will not work for point features.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":549,"to":551}}}}],["126",{"pageContent":"* `-aN` or `--coalesce-smallest-as-needed`: Dynamically combine the smallest features (physically smallest: the shortest lines or the smallest polygons) from each zoom level into other nearby features to keep large tiles under the 500K size limit. This option will not work for point features, and will probably not help very much with LineStrings. It is mostly intended for polygons, to maintain the full original area covered by polygons while still reducing the feature count somehow. The attributes of the small polygons are *not* preserved into the combined features (except through `--accumulate-attribute`), only their geometry. Furthermore, the polygons to which nested polygons are coalesced may not necessarily be the immediately enclosing features.\n * `-aD` or `--coalesce-densest-as-needed`: Dynamically combine the densest features from each zoom level into other nearby features to keep large tiles under the 500K size limit. (Again, mostly useful for polygons.)","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":552,"to":553}}}}],["127",{"pageContent":"* `-aS` or `--coalesce-fraction-as-needed`: Dynamically combine a fraction of features from each zoom level into other nearby features to keep large tiles under the 500K size limit. (Again, mostly useful for polygons.)\n * `-pd` or `--force-feature-limit`: Dynamically drop some fraction of features from large tiles to keep them under the 500K size limit. It will probably look ugly at the tile boundaries. (This is like `-ad` but applies to each tile individually, not to the entire zoom level.) You probably don't want to use this.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":554,"to":555}}}}],["128",{"pageContent":"* `-aC` or `--cluster-densest-as-needed`: If a tile is too large, try to reduce its size by increasing the minimum spacing between features, and leaving one placeholder feature from each group.  The remaining feature will be given a `\"clustered\": true` attribute to indicate that it represents a cluster, a `\"point_count\"` attribute to indicate the number of features that were clustered into it, and a `\"sqrt_point_count\"` attribute to indicate the relative width of a feature to represent the cluster. If the features being clustered are points, the representative feature will be located at the average of the original points' locations; otherwise, one of the original features will be left as the representative.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":556,"to":556}}}}],["129",{"pageContent":"Dropping tightly overlapping features\n\n * `-g` _gamma_ or `--gamma=_gamma`_: Rate at which especially dense dots are dropped (default 0, for no effect). A gamma of 2 reduces the number of dots less than a pixel apart to the square root of their original number.\n * `-aG` or `--increase-gamma-as-needed`: If a tile is too large, try to reduce it to under 500K by increasing the `-g` gamma. The discovered gamma applies to the entire zoom level. You probably want to use `--drop-densest-as-needed` instead.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":558,"to":561}}}}],["130",{"pageContent":"Line and polygon simplification\n\n * `-S` _scale_ or `--simplification=`_scale_: Multiply the tolerance for line and polygon simplification by _scale_. The standard tolerance tries to keep\n   the line or polygon within one tile unit of its proper location. You can probably go up to about 10 without too much visible difference.\n * `-ps` or `--no-line-simplification`: Don't simplify lines and polygons\n * `-pS` or `--simplify-only-low-zooms`: Don't simplify lines and polygons at maxzoom (but do simplify at lower zooms)\n * `-pn` or `--no-simplification-of-shared-nodes`: Don't simplify away nodes that appear in more than one feature or are used multiple times within the same feature, so that the intersection node will not be lost from intersecting roads. (This will not be effective if you also use `--coalesce` or `--detect-shared-borders`.)\n * `-pt` or `--no-tiny-polygon-reduction`: Don't combine the area of very small polygons into small squares that represent their combined area.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":563,"to":570}}}}],["131",{"pageContent":"Attempts to improve shared polygon boundaries\n\n * `-ab` or `--detect-shared-borders`: In the manner of [TopoJSON](https://github.com/mbostock/topojson/wiki/Introduction), detect borders that are shared between multiple polygons and simplify them identically in each polygon. This takes more time and memory than considering each polygon individually.\n * `-aL` or `--grid-low-zooms`: At all zoom levels below _maxzoom_, snap all lines and polygons to a stairstep grid instead of allowing diagonals. You will also want to specify a tile resolution, probably `-D8`. This option provides a way to display continuous parcel, gridded, or binned data at low zooms without overwhelming the tiles with tiny polygons, since features will either get stretched out to the grid unit or lost entirely, depending on how they happened to be aligned in the original data. You probably don't want to use this.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":572,"to":575}}}}],["132",{"pageContent":"Controlling clipping to tile boundaries\n\n * `-b` _pixels_ or `--buffer=`_pixels_: Buffer size where features are duplicated from adjacent tiles. Units are \"screen pixels\"—1/256th of the tile width or height. (default 5)\n * `-pc` or `--no-clipping`: Don't clip features to the size of the tile. If a feature overlaps the tile's bounds or buffer at all, it is included completely. Be careful: this can produce very large tilesets, especially with large polygons.\n * `-pD` or `--no-duplication`: As with `--no-clipping`, each feature is included intact instead of cut to tile boundaries. In addition, it is included only in a single tile per zoom level rather than potentially in multiple copies. Clients of the tileset must check adjacent tiles (possibly some distance away) to ensure they have all features.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":577,"to":581}}}}],["133",{"pageContent":"Reordering features within each tile","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":583,"to":583}}}}],["134",{"pageContent":"* `-pi` or `--preserve-input-order`: Preserve the original input order of features as the drawing order instead of ordering geographically. (This is implemented as a restoration of the original order at the end, so that dot-dropping is still geographic, which means it also undoes `-ao`).\n * `-ac` or `--coalesce`: Coalesce consecutive features that have the same attributes. This can be useful if you have lots of small polygons with identical attributes and you would like to merge them together.\n * `-ao` or `--reorder`: Reorder features to put ones with the same attributes in sequence (instead of ones that are approximately spatially adjacent), to try to get them to coalesce. You probably want to use this if you use `--coalesce`.\n * `-ar` or `--reverse`: Try reversing the directions of lines to make them coalesce and compress better. You probably don't want to use this.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":585,"to":588}}}}],["135",{"pageContent":"* `-ar` or `--reverse`: Try reversing the directions of lines to make them coalesce and compress better. You probably don't want to use this.\n * `-ah` or `--hilbert`: Put features in Hilbert Curve order instead of the usual Z-Order. This improves the odds that spatially adjacent features will be sequentially adjacent, and should improve density calculations and spatial coalescing. It should be the default eventually.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":588,"to":589}}}}],["136",{"pageContent":"Adding calculated attributes\n\n * `-ag` or `--calculate-feature-density`: Add a new attribute, `tippecanoe_feature_density`, to each feature, to record how densely features are spaced in that area of the tile. You can use this attribute in the style to produce a glowing effect where points are densely packed. It can range from 0 in the sparsest areas to 255 in the densest.\n * `-ai` or `--generate-ids`: Add an `id` (a feature ID, not an attribute named `id`) to each feature that does not already have one. There is currently no guarantee that the `id` added will be stable between runs or that it will not conflict with manually-assigned feature IDs. Future versions of Tippecanoe may change the mechanism for allocating IDs.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":591,"to":594}}}}],["137",{"pageContent":"Trying to correct bad source geometry\n\n * `-aw` or `--detect-longitude-wraparound`: Detect when consecutive points within a feature jump to the other side of the world, and try to fix the geometry.\n * `-pw` or `--use-source-polygon-winding`: Instead of respecting GeoJSON polygon ring order, use the original polygon winding in the source data to distinguish inner (clockwise) and outer (counterclockwise) polygon rings.\n * `-pW` or `--reverse-source-polygon-winding`: Instead of respecting GeoJSON polygon ring order, use the opposite of the original polygon winding in the source data to distinguish inner (counterclockwise) and outer (clockwise) polygon rings.\n * `--clip-bounding-box=`*minlon*`,`*minlat*`,`*maxlon*`,`*maxlat*: Clip all features to the specified bounding box.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":596,"to":601}}}}],["138",{"pageContent":"Setting or disabling tile size limits","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":603,"to":603}}}}],["139",{"pageContent":"* `-M` _bytes_ or `--maximum-tile-bytes=`_bytes_: Use the specified number of _bytes_ as the maximum compressed tile size instead of 500K.\n * `-O` _features_ or `--maximum-tile-features=`_features_: Use the specified number of _features_ as the maximum in a tile instead of 200,000.\n * `-pf` or `--no-feature-limit`: Don't limit tiles to 200,000 features\n * `-pk` or `--no-tile-size-limit`: Don't limit tiles to 500K bytes\n * `-pC` or `--no-tile-compression`: Don't compress the PBF vector tile data. If you are getting \"Unimplemented type 3\" error messages from a renderer, it is probably because it expects uncompressed tiles using this option rather than the normal gzip-compressed tiles.\n * `-pg` or `--no-tile-stats`: Don't generate the `tilestats` row in the tileset metadata. Uploads without [tilestats](https://github.com/mapbox/mapbox-geostats) will take longer to process.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":605,"to":610}}}}],["140",{"pageContent":"* `-pg` or `--no-tile-stats`: Don't generate the `tilestats` row in the tileset metadata. Uploads without [tilestats](https://github.com/mapbox/mapbox-geostats) will take longer to process.\n * `--tile-stats-attributes-limit=`*count*: Include `tilestats` information about at most *count* attributes instead of the default 1000.\n * `--tile-stats-sample-values-limit=`*count*: Calculate `tilestats` attribute statistics based on *count* values instead of the default 1000.\n * `--tile-stats-values-limit=`*count*: Report *count* unique attribute values in `tilestats` instead of the default 100.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":610,"to":613}}}}],["141",{"pageContent":"Temporary storage\n\n * `-t` _directory_ or `--temporary-directory=`_directory_: Put the temporary files in _directory_.\n   If you don't specify, it will use `/tmp`.\n\n### Progress indicator\n\n * `-q` or `--quiet`: Work quietly instead of reporting progress or warning messages\n * `-Q` or `--no-progress-indicator`: Don't report progress, but still give warnings\n * `-U` _seconds_ or `--progress-interval=`_seconds_: Don't report progress more often than the specified number of _seconds_.\n * `-v` or `--version`: Report Tippecanoe's version number","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":615,"to":625}}}}],["142",{"pageContent":"Filters\n\n * `-C` _command_ or `--prefilter=`_command_: Specify a shell filter command to be run at the start of assembling each tile\n * `-c` _command_ or `--postfilter=`_command_: Specify a shell filter command to be run at the end of assembling each tile\n\nThe pre- and post-filter commands allow you to do optional filtering or transformation on the features of each tile\nas it is created. They are shell commands, run with the zoom level, X, and Y as the `$1`, `$2`, and `$3` arguments.\nFuture versions of Tippecanoe may add additional arguments for more context.\n\nThe features are provided to the filter\nas a series of newline-delimited GeoJSON objects on the standard input, and `tippecanoe` expects to read another\nset of GeoJSON features from the filter's standard output.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":627,"to":638}}}}],["143",{"pageContent":"The prefilter receives the features at the highest available resolution, before line simplification,\npolygon topology repair, gamma calculation, dynamic feature dropping, or other internal processing.\nThe postfilter receives the features at tile resolution, after simplification, cleaning, and dropping.\n\nThe layer name is provided as part of the `tippecanoe` element of the feature and must be passed through\nto keep the feature in its correct layer. In the case of the prefilter, the `tippecanoe` element may also\ncontain `index`, `sequence`, `extent`, and `dropped`, elements, which must be passed through for internal operations like\n`--drop-densest-as-needed`, `--drop-smallest-as-needed`, and `--preserve-input-order` to work.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":640,"to":647}}}}],["144",{"pageContent":"Examples:\n\n * Make a tileset of the Natural Earth countries to zoom level 5, and also copy the GeoJSON features\n   to files in a `tiles/z/x/y.geojson` directory hierarchy.\n\n```\ntippecanoe -o countries.mbtiles -z5 -C 'mkdir -p tiles/$1/$2; tee tiles/$1/$2/$3.geojson' ne_10m_admin_0_countries.json\n```\n\n * Make a tileset of the Natural Earth countries to zoom level 5, but including only those tiles that\n   intersect the [bounding box of Germany](https://www.flickr.com/places/info/23424829).\n   (The `limit-tiles-to-bbox` script is [in the Tippecanoe source directory](filters/limit-tiles-to-bbox).)\n\n```\ntippecanoe -o countries.mbtiles -z5 -C './filters/limit-tiles-to-bbox 5.8662 47.2702 15.0421 55.0581 $*' ne_10m_admin_0_countries.json","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":649,"to":663}}}}],["145",{"pageContent":"* Make a tileset of TIGER roads in Tippecanoe County, leaving out all but primary and secondary roads (as [classified by TIGER](https://www.census.gov/geo/reference/mtfcc.html)) below zoom level 11.\n\n```\ntippecanoe -o roads.mbtiles -c 'if [ $1 -lt 11 ]; then grep \"\\\"MTFCC\\\": \\\"S1[12]00\\\"\"; else cat; fi' tl_2016_18157_roads.json","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":666,"to":669}}}}],["146",{"pageContent":"Environment\n-----------\n\nTippecanoe ordinarily uses as many parallel threads as the operating system claims that CPUs are available.\nYou can override this number by setting the `TIPPECANOE_MAX_THREADS` environmental variable.\n\nGeoJSON extension\n-----------------\n\nTippecanoe defines a GeoJSON extension that you can use to specify the minimum and/or maximum zoom level\nat which an individual feature will be included in the vector tileset being produced.\nIf you have a feature like this:\n\n```\n{\n    \"type\" : \"Feature\",\n    \"tippecanoe\" : { \"maxzoom\" : 9, \"minzoom\" : 4 },\n    \"properties\" : { \"FULLNAME\" : \"N Vasco Rd\" },\n    \"geometry\" : {\n        \"type\" : \"LineString\",\n        \"coordinates\" : [ [ -121.733350, 37.767671 ], [ -121.733600, 37.767483 ], [ -121.733131, 37.766952 ] ]\n    }\n}","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":672,"to":694}}}}],["147",{"pageContent":"with a `tippecanoe` object specifiying a `maxzoom` of 9 and a `minzoom` of 4, the feature\nwill only appear in the vector tiles for zoom levels 4 through 9. Note that the `tippecanoe`\nobject belongs to the Feature, not to its `properties`. If you specify a `minzoom` for a feature,\nit will be preserved down to that zoom level even if dot-dropping with `-r` would otherwise have\ndropped it.\n\nYou can also specify a layer name in the `tippecanoe` object, which will take precedence over\nthe filename or name specified using `--layer`, like this:\n\n```\n{\n    \"type\" : \"Feature\",\n    \"tippecanoe\" : { \"layer\" : \"streets\" },\n    \"properties\" : { \"FULLNAME\" : \"N Vasco Rd\" },\n    \"geometry\" : {\n        \"type\" : \"LineString\",\n        \"coordinates\" : [ [ -121.733350, 37.767671 ], [ -121.733600, 37.767483 ], [ -121.733131, 37.766952 ] ]\n    }\n}","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":697,"to":715}}}}],["148",{"pageContent":"If your source GeoJSON only has `minzoom`, `maxzoom` and/or `layer` within `properties` you can use [ndjson-cli](https://github.com/mbostock/ndjson-cli/blob/master/README.md) to move them into the required `tippecanoe` object by piping the GeoJSON like this:\n\n```sh\nndjson-map 'd.tippecanoe = { minzoom: d.properties.minzoom, maxzoom: d.properties.maxzoom, layer: d.properties.layer }, delete d.properties.minzoom, delete d.properties.maxzoom, delete d.properties.layer, d'","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":718,"to":721}}}}],["149",{"pageContent":"Geometric simplifications\n-------------------------\n\nAt every zoom level, line and polygon features are subjected to Douglas-Peucker\nsimplification to the resolution of the tile.\n\nFor point features, it drops 1/2.5 of the dots for each zoom level above the\npoint base zoom (which is normally the same as the `-z` max zoom, but can be\na different zoom specified with `-B` if you have precise but sparse data).\nI don't know why 2.5 is the appropriate number, but the densities of many different\ndata sets fall off at about this same rate. You can use -r to specify a different rate.\n\nYou can use the gamma option to thin out especially dense clusters of points.\nFor any area where dots are closer than one pixel together (at whatever zoom level),\na gamma of 3, for example, will reduce these clusters to the cube root of their original density.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":724,"to":738}}}}],["150",{"pageContent":"For line features, it drops any features that are too small to draw at all.\nThis still leaves the lower zooms too dark (and too dense for the 500K tile limit,\nin some places), so I need to figure out an equitable way to throw features away.\n\nUnless you specify `--no-tiny-polygon-reduction`,\nany polygons that are smaller than a minimum area (currently 4 square subpixels) will\nhave their probability diffused, so that some of them will be drawn as a square of\nthis minimum size and others will not be drawn at all, preserving the total area that\nall of them should have had together.\n\nFeatures in the same tile that share the same type and attributes are coalesced\ntogether into a single geometry if you use `--coalesce`. You are strongly encouraged to use -x to exclude\nany unnecessary attributes to reduce wasted file size.\n\nIf a tile is larger than 500K, it will try encoding that tile at progressively\nlower resolutions before failing if it still doesn't fit.\n\nDevelopment\n-----------","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":740,"to":758}}}}],["151",{"pageContent":"If a tile is larger than 500K, it will try encoding that tile at progressively\nlower resolutions before failing if it still doesn't fit.\n\nDevelopment\n-----------\n\nRequires sqlite3 and zlib (should already be installed on MacOS). Rebuilding the manpage\nuses md2man (`gem install md2man`).\n\nLinux:\n\n    sudo apt-get install build-essential libsqlite3-dev zlib1g-dev\n\nThen build:\n\n    make\n\nand perhaps\n\n    make install\n\nTippecanoe now requires features from the 2011 C++ standard. If your compiler is older than\nthat, you will need to install a newer one. On MacOS, updating to the lastest XCode should\nget you a new enough version of `clang++`. On Linux, you should be able to upgrade `g++` with\n\n```\nsudo add-apt-repository -y ppa:ubuntu-toolchain-r/test\nsudo apt-get update -y\nsudo apt-get install -y g++-5\nexport CXX=g++-5","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":758,"to":787}}}}],["152",{"pageContent":"Docker Image\n------------\n\nA tippecanoe Docker image can be built from source and executed as a task to\nautomatically install dependencies and allow tippecanoe to run on any system\nsupported by Docker.\n\n```docker\n$ docker build -t tippecanoe:latest .\n$ docker run -it --rm \\\n  -v /tiledata:/data \\\n  tippecanoe:latest \\\n  tippecanoe --output=/data/output.mbtiles /data/example.geojson","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":790,"to":802}}}}],["153",{"pageContent":"The commands above will build a Docker image from the source and compile the\nlatest version. The image supports all tippecanoe flags and options.\n\nExamples\n------\n\nCheck out [some examples of maps made with tippecanoe](MADE_WITH.md)\n\nName\n----\n\nThe name is [a joking reference](http://en.wikipedia.org/wiki/Tippecanoe_and_Tyler_Too) to a \"tiler\" for making map tiles.\n\ntile-join\n=========\n\nTile-join is a tool for copying and merging vector mbtiles files and for\njoining new attributes from a CSV file to existing features in them.\n\nIt reads the tiles from an\nexisting .mbtiles file or a directory of tiles, matches them against the\nrecords of the CSV (if one is specified), and writes out a new tileset.\n\nIf you specify multiple source mbtiles files or source directories of tiles,\nall the sources are read and their combined contents are written to the new\nmbtiles output. If they define the same layers or the same tiles, the layers\nor tiles are merged.\n\nThe options are:","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":805,"to":833}}}}],["154",{"pageContent":"Output tileset\n\n * `-o` *out.mbtiles* or `--output=`*out.mbtiles*: Write the new tiles to the specified .mbtiles file.\n * `-e` *directory* or `--output-to-directory=`*directory*: Write the new tiles to the specified directory instead of to an mbtiles file.\n * `-f` or `--force`: Remove *out.mbtiles* if it already exists.\n\n### Tileset description and attribution\n\n * `-A` *attribution* or `--attribution=`*attribution*: Set the attribution string.\n * `-n` *name* or `--name=`*name*: Set the tileset name.\n * `-N` *description* or `--description=`*description*: Set the tileset description.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":835,"to":845}}}}],["155",{"pageContent":"Layer filtering and naming\n\n * `-l` *layer* or `--layer=`*layer*: Include the named layer in the output. You can specify multiple `-l` options to keep multiple layers. If you don't specify, they will all be retained.\n * `-L` *layer* or `--exclude-layer=`*layer*: Remove the named layer from the output. You can specify multiple `-L` options to remove multiple layers.\n * `-R`*old*`:`*new* or `--rename-layer=`*old*`:`*new*: Rename the layer named *old* to be named *new* instead. You can specify multiple `-R` options to rename multiple layers. Renaming happens before filtering.\n\n### Zoom levels\n\n * `-z` _zoom_ or `--maximum-zoom=`_zoom_: Don't copy tiles from higher zoom levels than the specified zoom\n * `-Z` _zoom_ or `--minimum-zoom=`_zoom_: Don't copy tiles from lower zoom levels than the specified zoom","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":847,"to":856}}}}],["156",{"pageContent":"Merging attributes from a CSV file\n\n * `-c` *match*`.csv` or `--csv=`*match*`.csv`: Use *match*`.csv` as the source for new attributes to join to the features. The first line of the file should be the key names; the other lines are values. The first column is the one to match against the existing features; the other columns are the new data to add.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":858,"to":860}}}}],["157",{"pageContent":"Filtering features and feature attributes\n\n * `-x` *key* or `--exclude=`*key*: Remove attributes of type *key* from the output. You can use this to remove the field you are matching against if you no longer need it after joining, or to remove any other attributes you don't want.\n * `-X` or `--exclude-all`: Remove all attributes from the output.\n * `-i` or `--if-matched`: Only include features that matched the CSV.\n * `-j` *filter* or `--feature-filter`=*filter*: Check features against a per-layer filter (as defined in the [Mapbox GL Style Specification](https://docs.mapbox.com/mapbox-gl-js/style-spec/#other-filter)) and only include those that match. Any features in layers that have no filter specified will be passed through. Filters for the layer `\"*\"` apply to all layers.\n * `-J` *filter-file* or `--feature-filter-file`=*filter-file*: Like `-j`, but read the filter from a file.\n * `-pe` or `--empty-csv-columns-are-null`: Treat empty CSV columns as nulls rather than as empty strings.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":862,"to":869}}}}],["158",{"pageContent":"Setting or disabling tile size limits\n\n * `-pk` or `--no-tile-size-limit`: Don't skip tiles larger than 500K.\n * `-pC` or `--no-tile-compression`: Don't compress the PBF vector tile data.\n * `-pg` or `--no-tile-stats`: Don't generate the `tilestats` row in the tileset metadata. Uploads without [tilestats](https://github.com/mapbox/mapbox-geostats) will take longer to process.\n\nBecause tile-join just copies the geometries to the new .mbtiles without processing them\n(except to rescale the extents if necessary),\nit doesn't have any of tippecanoe's recourses if the new tiles are bigger than the 500K tile limit.\nIf a tile is too big and you haven't specified `-pk`, it is just left out of the new tileset.\n\nExample\n-------\n\nImagine you have a tileset of census blocks:","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":871,"to":885}}}}],["159",{"pageContent":"Example\n-------\n\nImagine you have a tileset of census blocks:\n\n```sh\ncurl -L -O http://www2.census.gov/geo/tiger/TIGER2010/TABBLOCK/2010/tl_2010_06001_tabblock10.zip\nunzip tl_2010_06001_tabblock10.zip\nogr2ogr -f GeoJSON tl_2010_06001_tabblock10.json tl_2010_06001_tabblock10.shp\n./tippecanoe -o tl_2010_06001_tabblock10.mbtiles tl_2010_06001_tabblock10.json","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":885,"to":894}}}}],["160",{"pageContent":"and a CSV of their populations:\n\n```sh\ncurl -L -O http://www2.census.gov/census_2010/01-Redistricting_File--PL_94-171/California/ca2010.pl.zip\nunzip -p ca2010.pl.zip cageo2010.pl |\nawk 'BEGIN {\n    print \"GEOID10,population\"\n}\n(substr($0, 9, 3) == \"750\") {\n    print \"\\\"\" substr($0, 28, 2) substr($0, 30, 3) substr($0, 55, 6) substr($0, 62, 4) \"\\\",\" (0 + substr($0, 328, 9))\n}' > population.csv\n```\n\nwhich looks like this:\n\n```\nGEOID10,population\n\"060014277003018\",0\n\"060014283014046\",0\n\"060014284001020\",0\n...\n\"060014507501001\",202\n\"060014507501002\",119\n\"060014507501003\",193\n\"060014507501004\",85\n...\n```\n\nThen you can join those populations to the geometries and discard the no-longer-needed ID field:\n\n```sh\n./tile-join -o population.mbtiles -x GEOID10 -c population.csv tl_2010_06001_tabblock10.mbtiles","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":897,"to":928}}}}],["161",{"pageContent":"tippecanoe-enumerate\n====================\n\nThe `tippecanoe-enumerate` utility lists the tiles that an `mbtiles` file defines.\nEach line of the output lists the name of the `mbtiles` file and the zoom, x, and y\ncoordinates of one of the tiles. It does basically the same thing as\n\n    select zoom_level, tile_column, (1 << zoom_level) - 1 - tile_row from tiles;\n\non the file in sqlite3.\n\ntippecanoe-decode\n=================\n\nThe `tippecanoe-decode` utility turns vector mbtiles back to GeoJSON. You can use it either\non an entire file:\n\n    tippecanoe-decode file.mbtiles\n\nor on an individual tile:\n\n    tippecanoe-decode file.mbtiles zoom x y\n    tippecanoe-decode file.vector.pbf zoom x y\n\nUnless you use `-c`, the output is a set of nested FeatureCollections identifying each\ntile and layer separately. Note that the same features generally appear at all zooms,\nso the output for the file will have many copies of the same features at different\nresolutions.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":931,"to":958}}}}],["162",{"pageContent":"Options\n\n * `-s` _projection_ or `--projection=`*projection*: Specify the projection of the output data. Currently supported are EPSG:4326 (WGS84, the default) and EPSG:3857 (Web Mercator).\n * `-z` _maxzoom_ or `--maximum-zoom=`*maxzoom*: Specify the highest zoom level to decode from the tileset\n * `-Z` _minzoom_ or `--minimum-zoom=`*minzoom*: Specify the lowest zoom level to decode from the tileset\n * `-l` _layer_ or `--layer=`*layer*: Decode only layers with the specified names. (Multiple `-l` options can be specified.)\n * `-c` or `--tag-layer-and-zoom`: Include each feature's layer and zoom level as part of its `tippecanoe` object rather than as a FeatureCollection wrapper\n * `-S` or `--stats`: Just report statistics about each tile's size and the number of features in it, as a JSON structure.\n * `-f` or `--force`: Decode tiles even if polygon ring order or closure problems are detected\n\ntippecanoe-json-tool\n====================","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":960,"to":971}}}}],["163",{"pageContent":"tippecanoe-json-tool\n====================\n\nExtracts GeoJSON features or standalone geometries as line-delimited JSON objects from a larger JSON file,\nfollowing the same extraction rules that Tippecanoe uses when parsing JSON.\n\n    tippecanoe-json-tool file.json [... file.json]\n\nOptionally also wraps them in a FeatureCollection or GeometryCollection as appropriate.\n\nOptionally extracts an attribute from the GeoJSON `properties` for sorting.\n\nOptionally joins a sorted CSV of new attributes to a sorted GeoJSON file.\n\nThe reason for requiring sorting is so that it is possible to work on CSV and GeoJSON files that are larger\nthan can comfortably fit in memory by streaming through them in parallel, in the same way that the Unix\n`join` command does. The Unix `sort` command can be used to sort large files to prepare them for joining.\n\nThe sorting interface is weird, and future version of `tippecanoe-json-tool` will replace it with\nsomething better.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":971,"to":990}}}}],["164",{"pageContent":"Options\n\n * `-w` or `--wrap`: Add the FeatureCollection or GeometryCollection wrapper.\n * `-e` *attribute* or `--extract=`*attribute*: Extract the named attribute as a prefix to each feature.\n   The formatting makes excessive use of `\\u` quoting so that it follows JSON string rules but will still\n   be sorted correctly by tools that just do ASCII comparisons.\n * `-c` *file.csv* or `--csv=`*file.csv*: Join attributes from the named sorted CSV file, using its first column as the join key. Geometries will be passed through even if they do not match the CSV; CSV lines that do not match a geometry will be discarded.\n * `-pe` or `--empty-csv-columns-are-null`: Treat empty CSV columns as nulls rather than as empty strings.","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":992,"to":999}}}}],["165",{"pageContent":"Example\n\nJoin Census LEHD ([Longitudinal Employer-Household Dynamics](https://lehd.ces.census.gov/)) employment data to a file of Census block geography\nfor Tippecanoe County, Indiana.\n\nDownload Census block geometry, and convert to GeoJSON:\n\n```\n$ curl -L -O https://www2.census.gov/geo/tiger/TIGER2010/TABBLOCK/2010/tl_2010_18157_tabblock10.zip\n$ unzip tl_2010_18157_tabblock10.zip\n$ ogr2ogr -f GeoJSON tl_2010_18157_tabblock10.json tl_2010_18157_tabblock10.shp\n```\n\nDownload Indiana employment data, and fix name of join key in header\n\n```\n$ curl -L -O https://lehd.ces.census.gov/data/lodes/LODES7/in/wac/in_wac_S000_JT00_2015.csv.gz\n$ gzip -dc in_wac_S000_JT00_2015.csv.gz | sed '1s/w_geocode/GEOID10/' > in_wac_S000_JT00_2015.csv\n```\n\nSort GeoJSON block geometry so it is ordered by block ID. If you don't do this, you will get a\n\"GeoJSON file is out of sort\" error.\n\n```\n$ tippecanoe-json-tool -e GEOID10 tl_2010_18157_tabblock10.json | LC_ALL=C sort > tl_2010_18157_tabblock10.sort.json","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":1001,"to":1025}}}}],["166",{"pageContent":"Join block geometries to employment attributes:\n\n```\n$ tippecanoe-json-tool -c in_wac_S000_JT00_2015.csv tl_2010_18157_tabblock10.sort.json > blocks-wac.json\n```","metadata":{"source":"https://github.com/mapbox/tippecanoe","loc":{"lines":{"from":1028,"to":1032}}}}],["167",{"pageContent":"# OSM Bright\n[![Build Status](https://travis-ci.org/openmaptiles/osm-bright-gl-style.svg?branch=master)](https://travis-ci.org/openmaptiles/osm-bright-gl-style)\n\nA Mapbox GL basemap style showcasing OpenStreetMap.\nIt is using the vector tile\nschema of [OpenMapTiles](https://github.com/openmaptiles/openmaptiles).\n\n## Preview\n\n**[:globe_with_meridians: Browse the map](https://openmaptiles.github.io/osm-bright-gl-style)**\n\n<img src=\"https://github.com/openmaptiles/osm-bright-gl-style/raw/gh-pages/preview/preview-15.png\" width=\"600\" title=\"Preview Zurich\">\n\n<img src=\"https://github.com/openmaptiles/osm-bright-gl-style/raw/gh-pages/preview/preview-10.png\" width=\"600\" title=\"Preview Lake Zurich\">\n\n<img src=\"https://github.com/openmaptiles/osm-bright-gl-style/raw/gh-pages/preview/preview-7.png\" width=\"600\" title=\"Preview Switzerland\">\n\n<img src=\"https://github.com/openmaptiles/osm-bright-gl-style/raw/gh-pages/preview/preview-4.png\" width=\"600\" title=\"Preview Europe\">","metadata":{"source":"https://github.com/openmaptiles/osm-bright-gl-style","loc":{"lines":{"from":1,"to":18}}}}],["168",{"pageContent":"Edit the Style\n\nUse the [Maputnik CLI](http://openmaptiles.org/docs/style/maputnik/) to edit and develop the style.\nAfter you've started Maputnik open the editor on `localhost:8000`.\n\n```\nmaputnik --watch --file style.json\n```","metadata":{"source":"https://github.com/openmaptiles/osm-bright-gl-style","loc":{"lines":{"from":20,"to":27}}}}],["169",{"pageContent":"![turf](https://raw.githubusercontent.com/Turfjs/turf/9a1d5e8d99564d4080f1e2bf1517ed41d18012fa/logo.png)\n======\n[![GitHub Actions Status](https://github.com/Turfjs/turf/actions/workflows/turf.yml/badge.svg)](https://github.com/Turfjs/turf/actions/workflows/turf.yml/badge.svg)\n[![Version Badge][npm-img]][npm-url]\n[![Gitter chat][gitter-img]][gitter-url]\n[![Backers on Open Collective][oc-backer-badge]](#backers)\n[![Sponsors on Open Collective][oc-sponsor-badge]](#sponsors) [![Coverage Status](https://coveralls.io/repos/github/Turfjs/turf/badge.svg)](https://coveralls.io/github/Turfjs/turf)\n\n[npm-img]: https://img.shields.io/npm/v/@turf/turf.svg\n[npm-url]: https://www.npmjs.com/package/@turf/turf\n[gitter-img]: https://badges.gitter.im/Turfjs/turf.svg\n[gitter-url]: https://gitter.im/Turfjs/turf\n[oc-backer-badge]: https://opencollective.com/turf/backers/badge.svg\n[oc-sponsor-badge]: https://opencollective.com/turf/sponsors/badge.svg\n\n***A modular geospatial engine written in JavaScript***","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":1,"to":16}}}}],["170",{"pageContent":"***A modular geospatial engine written in JavaScript***\n\n[turfjs.org](http://turfjs.org/)\n\n- - -\n\n[Turf](https://turfjs.org) is a [JavaScript library](https://en.wikipedia.org/wiki/JavaScript_library) for [spatial analysis](http://en.wikipedia.org/wiki/Spatial_analysis). It includes traditional spatial operations, helper functions for creating [GeoJSON](http://geojson.org) data, and data classification and statistics tools. Turf can be added to your website as a client-side plugin, or you can [run Turf server-side](https://www.npmjs.com/package/@turf/turf) with [Node.js](http://nodejs.org/) (see below).","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":16,"to":22}}}}],["171",{"pageContent":"Installation\n\n### In Node.js\n\n```bash\n# get all of turf\nnpm install @turf/turf\n\n# or get individual packages\nnpm install @turf/helpers\nnpm install @turf/buffer\n```\n\n### In browser\n\nDownload the [minified file](https://npmcdn.com/@turf/turf/turf.min.js), and include it in a script tag. This will expose a global variable named `turf`.\n\n```html\n<script src=\"turf.min.js\" charset=\"utf-8\"></script>\n```\n\nYou can also include it directly from a CDN:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/@turf/turf@6/turf.min.js\"></script>\n```\n\n### TypeScript\n\nTypeScript definitions are packaged with each module. No DefinitelyTyped packages required.","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":24,"to":53}}}}],["172",{"pageContent":"TypeScript\n\nTypeScript definitions are packaged with each module. No DefinitelyTyped packages required.\n\n### Other languages\n\nPorts of Turf.js are available in:\n\n- [Java](https://github.com/mapbox/mapbox-java/tree/master/services-turf/src/main/java/com/mapbox/turf) (Android, Java SE)\n  - > [The current to-do list for porting to Java](https://github.com/mapbox/mapbox-java/blob/master/docs/turf-port.md)\n- [Swift](https://github.com/mapbox/turf-swift/) (iOS, macOS, tvOS, watchOS, Linux)\n  - > Turf for Swift is **experimental** and its public API is subject to change. Please use with care.\n- [Dart/Flutter](https://github.com/dartclub/turf_dart) (Dart Web, Dart Native; Flutter for iOS, Android, macOS, Windows, Linux, Web)\n  - > The Turf for Dart port is still in progress, the implementation status can be found in the [README](https://github.com/dartclub/turf_dart#components).\n- - -","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":53,"to":67}}}}],["173",{"pageContent":"Data in Turf\n\nTurf uses <a href='http://geojson.org/'>GeoJSON</a> for all geographic data. Turf expects the data to be standard <a href='http://en.wikipedia.org/wiki/World_Geodetic_System'>WGS84</a> longitude, latitude coordinates. Check out <a href='http://geojson.io/#id=gist:anonymous/844f013aae8354eb889c&map=12/38.8955/-77.0135'>geojson.io</a> for a tool to easily create this data.\n\n> **NOTE:** Turf expects data in (longitude, latitude) order per the GeoJSON standard.\n\nMost Turf functions work with GeoJSON features. These are pieces of data that represent a collection of properties (ie: population, elevation, zipcode, etc.) along with a geometry. GeoJSON has several geometry types such as:\n\n* Point\n* LineString\n* Polygon\n\nTurf provides a few geometry functions of its own. These are nothing more than simple (and optional) wrappers that output plain old GeoJSON. For example, these two methods of creating a point are functionally equivalent:","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":69,"to":81}}}}],["174",{"pageContent":"```js\n// Note order: longitude, latitude.\nvar point1 = turf.point([-73.988214, 40.749128]);\n\nvar point2 = {\n  type: 'Feature',\n  geometry: {\n    type: 'Point',\n    // Note order: longitude, latitude.\n    coordinates: [-73.988214, 40.749128]\n  },\n  properties: {}\n};\n```","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":83,"to":96}}}}],["175",{"pageContent":"Browser support\n\nTurf packages are compiled to target ES2017. However, the browser version of @turf/turf is transpiled to also include support for IE11. If you are using these packages and need to target IE11, please transpile the following packages as part of your build:\n\n```\n@turf/*\nrobust-predicates\nrbush\ntinyqueue\n```\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. If you are interested in helping, check out the [Contributing Guide](CONTRIBUTING.md).\n\n<a href=\"https://github.com/Turfjs/turf/graphs/contributors\"><img src=\"https://opencollective.com/turf/contributors.svg?width=890&button=false\" /></a>\n\n\n## Backers\n\nThank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/turf#backer)]\n\n<a href=\"https://opencollective.com/turf#backers\" target=\"_blank\"><img src=\"https://opencollective.com/turf/backers.svg?width=890\"></a>","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":98,"to":120}}}}],["176",{"pageContent":"Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/turf#sponsor)]","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":123,"to":125}}}}],["177",{"pageContent":"<a href=\"https://opencollective.com/turf/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/5/avatar.svg\"></a>","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":127,"to":132}}}}],["178",{"pageContent":"<a href=\"https://opencollective.com/turf/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/turf/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/turf/sponsor/9/avatar.svg\"></a>","metadata":{"source":"https://github.com/Turfjs/turf","loc":{"lines":{"from":132,"to":136}}}}],["179",{"pageContent":"# OpenStreetMap API for Javascript\n\n[![Build Status](https://github.com/k-yle/osm-api-js/workflows/Build%20and%20Test/badge.svg)](https://github.com/k-yle/osm-api-js/actions)\n[![Coverage Status](https://coveralls.io/repos/github/k-yle/osm-api-js/badge.svg?branch=main&t=LQmPNl)](https://coveralls.io/github/k-yle/osm-api-js?branch=main)\n[![npm version](https://badge.fury.io/js/osm-api.svg)](https://badge.fury.io/js/osm-api)\n[![npm](https://img.shields.io/npm/dt/osm-api.svg)](https://www.npmjs.com/package/osm-api)\n![npm bundle size](https://img.shields.io/bundlephobia/minzip/osm-api)\n\n🗺️🌏 Javascript/Typescript wrapper around the OpenStreetMap API.\n\nBenefits:\n\n- Lightweight (24 kB gzipped)\n- works in nodejs and the browser.\n- converts OSM's XML into JSON automatically.\n- uses OAuth 2, so that you don't need to expose your OAuth `client_secret`\n\n## Install\n\n```sh\nnpm install osm-api\n```","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":1,"to":22}}}}],["180",{"pageContent":"Install\n\n```sh\nnpm install osm-api\n```\n\n## Usage\n\n```js\nconst OSM = require(\"osm-api\");\n// or\nimport * as OSM from \"osm-api\";\n\n// you can call methods that don't require authentication\nawait OSM.getFeature(\"way\", 23906749);\n\n// Once you login, you can call methods that require authentication.\n// See the section below about authentication.\nawait OSM.createChangesetComment(114733070, \"Thanks for your edit!\");\n```\n\nIf you don't use a bundler, you can also include the module using a `<script>` tag:\n\n```html\n<script src=\"https://unpkg.com/osm-api@1\"></script>\n<script>\n  OSM.getFeature(\"way\", 23906749);\n  OSM.login({ ... });\n  ...\n</script>\n```","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":22,"to":52}}}}],["181",{"pageContent":"Examples\n\nAll methods return promises. Examples requests and responses are available for all methods:\n\n> 🔑 means the method requires authentication","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":54,"to":58}}}}],["182",{"pageContent":"- Features\n  - [`getFeature()`](./examples/getFeature.md)\n  - [`getFeatures()`](./examples/getFeatures.md)\n  - [`getFeatureAtVersion`](./examples/getFeatureAtVersion.md)\n  - [`getFeatureHistory`](./examples/getFeatureHistory.md)\n  - [`getWaysForNode`](./examples/getWaysForNode.md)\n  - [`getRelationsForElement`](./examples/getRelationsForElement.md)\n- Changesets\n  - [`listChangesets`](./examples/getFeature.md)\n  - [`getChangeset`](./examples/getChangeset.md)\n  - [`getChangesetDiff`](./examples/getChangesetDiff.md)\n  - 🔑 [`uploadChangeset`](./examples/uploadChangeset.md)\n  - 🔑 [`createChangesetComment`](./examples/createChangesetComment.md)\n- Users\n  - [`getUser`](./examples/getUser.md)\n  - [`getUsers`](./examples/getUsers.md)\n  - [`getUIdFromDisplayName`](./examples/getUIdFromDisplayName.md)\n- Misc\n  - [`getCapabilities()`](./examples/getCapabilities.md)\n  - [`getMapData`](./examples/getMapData.md)\n- Authentication (browser only, not available in NodeJS)\n  - `login`\n  - `logout`\n  - `isLoggedIn`","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":60,"to":83}}}}],["183",{"pageContent":"- [`getCapabilities()`](./examples/getCapabilities.md)\n  - [`getMapData`](./examples/getMapData.md)\n- Authentication (browser only, not available in NodeJS)\n  - `login`\n  - `logout`\n  - `isLoggedIn`\n  - 🔑 `getAuthToken()`\n  - `authReady`","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":83,"to":90}}}}],["184",{"pageContent":"Authentication in the browser\n\nWhen used in the browser, this library lets you authenticate to OSM using OAuth 2. This requires either:\n\n1. Redirecting the user to the OAuth page, or\n2. Opening a popup window.","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":92,"to":97}}}}],["185",{"pageContent":"1. Popup\n\nIf using a popup, you should create a separate landing page, such as `land.html`. This html file should contain the following code:\n\n> 💡 If you don't want to create a separate page, you can set the redirect URL to your\n> app's main page, as long as you include this HTML snippet.\n\n```html\n<script>\n  if (window.opener) {\n    window.opener.authComplete(location.href);\n    window.close();\n  }\n</script>\n```\n\nTo login, or check whether the user is logged in, use the following code:\n\n```js\nconst OSM = require(\"osm-api\");\n\nOSM.login({\n  mode: \"popup\",\n  clientId: \".......\",\n  redirectUrl: \"https://example.com/land.html\",\n})\n  .then(() => {\n    console.log(\"User is now logged in!\");\n  })\n  .catch(() => {\n    console.log(\"User cancelled the login, or there was an error\");\n  });\n\n// you can check if a user is logged in using\nOSM.isLoggedIn();\n\n// and you can get the access_token using\nOSM.getAuthToken();\n```","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":99,"to":137}}}}],["186",{"pageContent":"2. Redirect\n\nIf you use the redirect method, you don't need a separate landing page.\n\n```js\nconst OSM = require(\"osm-api\");\n\n// when you call this function, you will be immediately redirected to openstreetmap.org\nOSM.login({\n  mode: \"redirect\",\n  clientId: \".......\",\n  redirectUrl: \"https://example.com/land.html\",\n});\n```\n\n```js\nconst OSM = require(\"osm-api\");\n\n// If you login using the redirect method, you need to await\n// this promise before you can call `isLoggedIn` or `getAuthToken`.\nawait OSM.authReady;\n\n// you can check if a user is logged in using\nOSM.isLoggedIn();\n\n// and you can get the access_token using\nOSM.getAuthToken();\n```","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":139,"to":166}}}}],["187",{"pageContent":"Authentication in NodeJS\n\nIn NodeJS, if you want to use a method that requires authentication, call the `configure()` function first:\n\n```js\nconst OSM = require(\"osm-api\");\n\nOSM.configure({ bearerToken: \"...\" });\n// or\nOSM.configure({ basicAuth: { username: \"...\", password: \"...\" } });\n\n// now you can call methods that require authentication.\n// Example:\nawait OSM.createChangesetComment(114733070, \"Thanks for your edit!\");\n```","metadata":{"source":"https://github.com/k-yle/osm-api-js","loc":{"lines":{"from":168,"to":182}}}}],["188",{"pageContent":"Leaflet was created 11 years ago by [Volodymyr Agafonkin](https://agafonkin.com), a Ukrainian citizen living in Kyiv.\r\n\r\nRussian bombs are now falling over Volodymyr's hometown. His family, his friends, his neighbours, thousands and thousands of absolutely wonderful people, are either seeking refuge or fighting for their lives.\r\n\r\nRussian soldiers have already killed tens of thousands of civilians, including women and children, and are committing mass war crimes like gang rapes, executions, looting, and targeted bombings of civilian shelters and places of cultural significance. The death toll keeps rising, and Ukraine needs your help.\r\n\r\nAs Volodymyr [expressed a few days before the invasion](https://twitter.com/LeafletJS/status/1496051256409919489):","metadata":{"source":"https://github.com/Leaflet/Leaflet","loc":{"lines":{"from":1,"to":7}}}}],["189",{"pageContent":"As Volodymyr [expressed a few days before the invasion](https://twitter.com/LeafletJS/status/1496051256409919489):\r\n\r\n> If you want to help, educate yourself and others on the Russian threat, follow reputable journalists, demand severe Russian sanctions and Ukrainian support from your leaders, protest the war, reach out to Ukrainian friends, donate to Ukrainian charities. Just don't be silent.\r\n\r\nUkrainians are recommending the [Come Back Alive](https://savelife.in.ua/en/) charity. For other options, see [StandWithUkraine](https://stand-with-ukraine.pp.ua).\r\n\r\nIf an appeal to humanity doesn't work for you, I'll appeal to your egoism: the future of Ukrainian citizens is the future of Leaflet.","metadata":{"source":"https://github.com/Leaflet/Leaflet","loc":{"lines":{"from":7,"to":13}}}}],["190",{"pageContent":"If an appeal to humanity doesn't work for you, I'll appeal to your egoism: the future of Ukrainian citizens is the future of Leaflet.\r\n\r\nIt is chilling to see Leaflet being used for [documenting Russia's war crimes](https://ukraine.bellingcat.com/), [factual reporting of the war](https://liveuamap.com/) and for coordination of humanitarian efforts [in Romania](https://refugees.ro/) and [in Poland](https://dopomoha.pl/). We commend these uses of Leaflet.\r\n\r\nIf you support the actions of the Russian government (even after reading all this), do everyone else a favour and [carry some seeds in your pocket](https://www.theguardian.com/world/video/2022/feb/25/ukrainian-woman-sunflower-seeds-russian-soldiers-video).\r\n\r\nYours truly,<br>\r\nLeaflet maintainers.\r\n\r\n---\r\n\r\n<img width=\"600\" src=\"https://rawgit.com/Leaflet/Leaflet/main/src/images/logo.svg\" alt=\"Leaflet\" />\r\n\r\nLeaflet is the leading open-source JavaScript library for **mobile-friendly interactive maps**.","metadata":{"source":"https://github.com/Leaflet/Leaflet","loc":{"lines":{"from":13,"to":26}}}}],["191",{"pageContent":"<img width=\"600\" src=\"https://rawgit.com/Leaflet/Leaflet/main/src/images/logo.svg\" alt=\"Leaflet\" />\r\n\r\nLeaflet is the leading open-source JavaScript library for **mobile-friendly interactive maps**.\r\nWeighing just about 42 KB of gzipped JS plus 4 KB of gzipped CSS code, it has all the mapping [features][] most developers ever need.\r\n\r\nLeaflet is designed with *simplicity*, *performance* and *usability* in mind.\r\nIt works efficiently across all major desktop and mobile platforms out of the box,\r\ntaking advantage of HTML5 and CSS3 on modern browsers while being accessible on older ones too.\r\nIt can be extended with a huge amount of [plugins][],\r\nhas a beautiful, easy to use and [well-documented][] API\r\nand a simple, readable [source code][] that is a joy to [contribute][] to.\r\n\r\nFor more info, docs and tutorials, check out the [official website][].<br>\r\nFor **Leaflet downloads** (including the built main version), check out the [download page][].\r\n\r\nWe're happy to meet new contributors.","metadata":{"source":"https://github.com/Leaflet/Leaflet","loc":{"lines":{"from":26,"to":41}}}}],["192",{"pageContent":"For **Leaflet downloads** (including the built main version), check out the [download page][].\r\n\r\nWe're happy to meet new contributors.\r\nIf you want to **get involved** with Leaflet development, check out the [contribution guide][contribute].\r\nLet's make the best mapping library that will ever exist,\r\nand push the limits of what's possible with online maps!\r\n\r\n[![CI](https://github.com/Leaflet/Leaflet/actions/workflows/main.yml/badge.svg)](https://github.com/Leaflet/Leaflet/actions/workflows/main.yml)\r\n\r\n [contributors]: https://github.com/Leaflet/Leaflet/graphs/contributors\r\n [features]: http://leafletjs.com/#features\r\n [plugins]: http://leafletjs.com/plugins.html\r\n [well-documented]: http://leafletjs.com/reference.html \"Leaflet API reference\"\r\n [source code]: https://github.com/Leaflet/Leaflet \"Leaflet GitHub repository\"\r\n [hosted on GitHub]: http://github.com/Leaflet/Leaflet\r\n [contribute]: https://github.com/Leaflet/Leaflet/blob/main/CONTRIBUTING.md \"A guide to contributing to Leaflet\"","metadata":{"source":"https://github.com/Leaflet/Leaflet","loc":{"lines":{"from":41,"to":56}}}}],["193",{"pageContent":"[hosted on GitHub]: http://github.com/Leaflet/Leaflet\r\n [contribute]: https://github.com/Leaflet/Leaflet/blob/main/CONTRIBUTING.md \"A guide to contributing to Leaflet\"\r\n [official website]: http://leafletjs.com\r\n [download page]: http://leafletjs.com/download.html","metadata":{"source":"https://github.com/Leaflet/Leaflet","loc":{"lines":{"from":56,"to":59}}}}],["194",{"pageContent":"[<img width=\"300\" alt=\"Mapbox logo\" src=\"https://static-assets.mapbox.com/www/logos/mapbox-logo-black.png\">](https://www.mapbox.com/)\n\n**Mapbox GL JS** is a JavaScript library for interactive, customizable vector maps on the web. It takes map styles that conform to the\n[Mapbox Style Specification](https://docs.mapbox.com/mapbox-gl-js/style-spec/), applies them to vector tiles that\nconform to the [Mapbox Vector Tile Specification](https://github.com/mapbox/vector-tile-spec), and renders them using\nWebGL.","metadata":{"source":"https://github.com/mapbox/mapbox-gl-js","loc":{"lines":{"from":1,"to":6}}}}],["195",{"pageContent":"Mapbox GL JS is part of the [cross-platform Mapbox GL ecosystem](https://www.mapbox.com/maps/), which also includes\ncompatible native SDKs for applications on [Android](https://docs.mapbox.com/android/maps/overview/),\n[iOS](https://docs.mapbox.com/ios/maps/overview/), [macOS](http://mapbox.github.io/mapbox-gl-native/macos),\n[Qt](https://github.com/mapbox/mapbox-gl-native/tree/master/platform/qt), and [React Native](https://github.com/mapbox/react-native-mapbox-gl/). Mapbox provides building blocks to add location features like maps, search, and navigation into any experience you\ncreate. To get started with GL JS or any of our other building blocks,\n[sign up for a Mapbox account](https://www.mapbox.com/signup/).\n\nIn addition to GL JS, this repository contains code, issues, and test fixtures that are common to both GL JS and the\nnative SDKs. For code and issues specific to the native SDKs, see the\n[mapbox/mapbox-gl-native](https://github.com/mapbox/mapbox-gl-native/) repository.","metadata":{"source":"https://github.com/mapbox/mapbox-gl-js","loc":{"lines":{"from":8,"to":17}}}}],["196",{"pageContent":"- [Getting started with Mapbox GL JS](https://docs.mapbox.com/mapbox-gl-js/overview/)\n- [Tutorials](https://docs.mapbox.com/help/tutorials/#web-apps)\n- [API documentation](https://docs.mapbox.com/mapbox-gl-js/api/)\n- [Examples](https://docs.mapbox.com/mapbox-gl-js/examples/)\n- [Style documentation](https://docs.mapbox.com/mapbox-gl-js/style-spec/)\n- [Open source styles](https://github.com/mapbox/mapbox-gl-styles)\n- [Contributor documentation](./CONTRIBUTING.md)\n\n[<img width=\"600\" alt=\"Mapbox GL JS gallery of map images\" src=\"https://static-assets.mapbox.com/www/mapbox-gl-js-gallery.png\">](https://www.mapbox.com/mapbox-gljs)","metadata":{"source":"https://github.com/mapbox/mapbox-gl-js","loc":{"lines":{"from":19,"to":27}}}}],["197",{"pageContent":"**Caption:** (_Mapbox GL JS maps, left-to-right, top-to-bottom_): Custom styled point [clusters](https://docs.mapbox.com/mapbox-gl-js/style-spec/sources/#geojson-cluster), custom style with points, [hexbin visualization](https://blog.mapbox.com/exploring-nyc-open-data-with-3d-hexbins-5af2b7d8bc46) on a [Dark style](https://www.mapbox.com/maps/dark) map with [`Popups`](https://docs.mapbox.com/mapbox-gl-js/api/markers/#popup), data-driven [circles](https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/#circle) over a [`raster` layer](https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/#raster) with [satellite imagery](https://docs.mapbox.com/help/getting-started/satellite-imagery/), [3D terrain](https://docs.mapbox.com/mapbox-gl-js/example/?topic=3D) with custom [`Markers`](https://docs.mapbox.com/mapbox-gl-js/api/markers/#marker), [Mapbox Movement data](https://docs.mapbox.com/data/movement/guides/) visualization.","metadata":{"source":"https://github.com/mapbox/mapbox-gl-js","loc":{"lines":{"from":29,"to":29}}}}],["198",{"pageContent":"License\n\nMapbox Web SDK\n\nCopyright © 2021 - 2023 Mapbox, Inc. All rights reserved.","metadata":{"source":"https://github.com/mapbox/mapbox-gl-js","loc":{"lines":{"from":31,"to":35}}}}],["199",{"pageContent":"The software and files in this repository (collectively, “Software”) are licensed under the Mapbox TOS for use only with the relevant Mapbox product(s) listed at www.mapbox.com/pricing. This license allows developers with a current active Mapbox account to use and modify the authorized portions of the Software as needed for use only with the relevant Mapbox product(s) through their Mapbox account in accordance with the Mapbox TOS.  This license terminates automatically if a developer no longer has a Mapbox account in good standing or breaches the Mapbox TOS. For the license terms, please see the Mapbox TOS at https://www.mapbox.com/legal/tos/ which incorporates the Mapbox Product Terms at www.mapbox.com/legal/service-terms.  If this Software is a SDK, modifications that change or interfere with marked portions of the code related to billing, accounting, or data collection are not authorized and the SDK sends limited de-identified location and usage data which is used in accordance with the Mapbox TOS. [Updated 2023-01]","metadata":{"source":"https://github.com/mapbox/mapbox-gl-js","loc":{"lines":{"from":37,"to":37}}}}],["200",{"pageContent":"![MapLibre Logo](https://maplibre.org/img/maplibre-logo-big.svg)\n\n# MapLibre GL JS\n\n**[MapLibre GL JS](https://maplibre.org/maplibre-gl-js-docs/api/)** is an open-source library for publishing maps on your websites or webview based apps. Fast displaying of maps is possible thanks to GPU-accelerated vector tile rendering. \n\nIt originated as an open-source fork of [mapbox-gl-js](https://github.com/mapbox/mapbox-gl-js), before their switch to a non-OSS license in December 2020. The library's initial versions (1.x) were intended to be a drop-in replacement for the Mapbox’s OSS version (1.x) with additional functionality, but have evolved a lot since then.","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":1,"to":7}}}}],["201",{"pageContent":"[![License](https://img.shields.io/badge/License-BSD_3--Clause-blue.svg?style=flat)](LICENSE.txt)[![Version](https://img.shields.io/npm/v/maplibre-gl?style=flat)](https://www.npmjs.com/package/maplibre-gl)[![CI](https://github.com/maplibre/maplibre-gl-js/actions/workflows/ci.yml/badge.svg)](https://github.com/maplibre/maplibre-gl-js/actions/workflows/ci.yml)[![PRs](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](https://opensource.org/licenses/BSD-3-Clause)","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":9,"to":9}}}}],["202",{"pageContent":"Getting Started\n\nInclude the JavaScript and CSS files in the `<head>` of your HTML file.\n\n``` html\n<script src='https://unpkg.com/maplibre-gl@latest/dist/maplibre-gl.js'></script>\n<link href='https://unpkg.com/maplibre-gl@latest/dist/maplibre-gl.css' rel='stylesheet' />\n```\n\nInclude the following code in the `<body>` of your HTML file.\n\n``` html\n<div id='map' style='width: 400px; height: 300px;'></div>\n<script>\nvar map = new maplibregl.Map({\n  container: 'map',\n  style: 'https://demotiles.maplibre.org/style.json', // stylesheet location\n  center: [-74.5, 40], // starting position [lng, lat]\n  zoom: 9 // starting zoom\n});\n</script>\n```\n\nEnjoy the map!\n\n<br />","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":11,"to":36}}}}],["203",{"pageContent":"Documentation\n\nFull documentation for this library [is available here](https://maplibre.org/maplibre-gl-js-docs/api/).\n\nCheck out the features through [examples](https://maplibre.org/maplibre-gl-js-docs/example/).","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":38,"to":42}}}}],["204",{"pageContent":"Check out the features through [examples](https://maplibre.org/maplibre-gl-js-docs/example/).\n\n| Showcases |      |\n| ---- | ---- |\n|![Display a map](https://maplibre.org/maplibre-gl-js-docs/assets/simple-map-800-1427cd84c8c693ead996f81b06e467bb.png)\t|![Third party vector tile source](https://maplibre.org/maplibre-gl-js-docs/assets/third-party-800-72a3092888152ba26920ec0ba5aeacd0.png)\t|\n|![Animate a series of images](https://maplibre.org/maplibre-gl-js-docs/assets/animate-images-800-522ec4f83d7988b2d6f23a0c1d5eb924.png)\t|![Create a heatmap layer](https://maplibre.org/maplibre-gl-js-docs/assets/heatmap-layer-800-a23e44d9c1238315f191187c5c628719.png)\t|\n|![3D buildings](https://maplibre.org/maplibre-gl-js-docs/assets/3d-buildings-800-18cda57800c107d1dee5f269bf7a12f2.png)\t|![Visualize population density](https://maplibre.org/maplibre-gl-js-docs/assets/visualize-population-density-800-dc0290780f7b2842031bdf1b9347981a.png)\t|\n\n<br />","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":42,"to":50}}}}],["205",{"pageContent":"Migrating from mapbox-gl to maplibre\nThe libraries are very similar but diverge with newer features happening from v2 in both libraries where Mapbox turned proprietary.\n\nThe overall migration happens by uninstalling `mapbox-gl` and installing `maplibre-gl` in your node packages (or see below for CDN links), and replacing `mapboxgl` with `maplibregl` throughout your TypeScript, JavaScript and HTML/CSS.\n\n```diff\n-    var map = new mapboxgl.Map({\n+    var map = new maplibregl.Map({\n\n-    <button class=\"mapboxgl-ctrl\">\n+    <button class=\"maplibregl-ctrl\">\n```\n\n#### Compatibility branch\n\nMaplibre v1 is completely backward compatible with Mapbox v1. This compatibility branch (named 1.x) is tagged v1 on npm, and its current version is 1.15.3.","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":52,"to":67}}}}],["206",{"pageContent":"CDN Links\n\n> MapLibre GL JS is distributed via [unpkg.com](https://unpkg.com). For more information, please see [MapLibre GL is on unpkg.com](./docs/README-unpkg.md#maplibre-gl-on-unpkgcom).\n\n```diff\n-    <script src=\"https://api.mapbox.com/mapbox-gl-js/v#.#.#/mapbox-gl.js\"></script>\n-    <link\n-      href=\"https://api.mapbox.com/mapbox-gl-js/v#.#.#/mapbox-gl.css\"\n-      rel=\"stylesheet\"\n-    />\n\n     \n+    <script src=\"https://unpkg.com/maplibre-gl@#.#.#/dist/maplibre-gl.js\"></script>\n+    <link\n+      href=\"https://unpkg.com/maplibre-gl@#.#.#/dist/maplibre-gl.css\"\n+      rel=\"stylesheet\"\n+    />","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":69,"to":85}}}}],["207",{"pageContent":"Want an example? Have a look at the official [MapLibre GL JS Documentation](https://maplibre.org/maplibre-gl-js-docs/example/).\n\nUse MapLibre GL JS bindings for React (https://visgl.github.io/react-map-gl/docs/get-started/get-started#using-with-a-mapbox-gl-fork) and Angular (https://github.com/maplibre/ngx-maplibre-gl). Find more at [awesome-maplibre](https://github.com/maplibre/awesome-maplibre).\n\n<br />","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":89,"to":93}}}}],["208",{"pageContent":"Contribution\n\n### Getting Involved\n\nJoin the #maplibre slack channel at OSMUS: get an invite at https://slack.openstreetmap.us/\nRead the [CONTRIBUTING.md](CONTRIBUTING.md) guide in order to get familiar with how we do things around here.\n\n### Community Leadership\n\nYou can find the official status of the backing community and steering committee in the [COMMUNITY.md](COMMUNITY.md) document.\n\n### Avoid Fragmentation\n\nIf you depend on a free software alternative to `mapbox-gl-js`, please consider joining our effort! Anyone with a stake in a healthy community-led fork is welcome to help us figure out our next steps. We welcome contributors and leaders! MapLibre GL already represents the combined efforts of a few early fork efforts, and we all benefit from \"one project\" rather than \"our way\". If you know of other forks, please reach out to them and direct them here.\n \n\n> **MapLibre GL** is developed following [Semantic Versioning (2.0.0)](https://semver.org/spec/v2.0.0.html).","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":95,"to":111}}}}],["209",{"pageContent":"Bounties\n\nWe offer Bounties for some tasks in the MapLibre GL JS repo. Read more about the Bounties in our step-by-step guide:\n\nhttps://maplibre.org/roadmap/step-by-step-bounties-guide/\n\nAnd find all currently published Bounties in MapLibre GL JS [here](https://github.com/maplibre/maplibre-gl-js/issues?q=is%3Aissue+is%3Aopen+label%3A%22%F0%9F%92%B0+bounty+L%22%2C%22%F0%9F%92%B0+bounty+S%22%2C%22%F0%9F%92%B0+bounty+M%22%2C%22%F0%9F%92%B0+bounty+XL%22%2C%22%F0%9F%92%B0+bounty+XXL%22+).\n\n<br />","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":113,"to":121}}}}],["210",{"pageContent":"Sponsors\n\nWe thank everyone who supported us financially in the past and special thanks to the people and organizations who support us with recurring donations!\n\nRead more about the MapLibre Sponsorship Program at [https://maplibre.org/sponsors/](https://maplibre.org/sponsors/).\n\nPlatinum:\n\n<a href=\"https://aws.com\"><img src=\"https://maplibre.org/img/aws-logo.svg\" alt=\"Logo AWS\" width=\"25%\"/></a>\n\nSilver:\n\n<a href=\"https://meta.com\"><img src=\"https://maplibre.org/img/meta-logo.svg\" alt=\"Logo Meta\" width=\"25%\"/></a>\n\n<a href=\"https://www.mierune.co.jp/?lang=en\"><img src=\"https://maplibre.org/img/mierune-logo.svg\" alt=\"Logo MIERUNE\" width=\"25%\"/></a>\n\n<a href=\"https://komoot.com/\"><img src=\"https://maplibre.org/img/komoot-logo.svg\" alt=\"Logo komoot\" width=\"25%\"/></a>\n\n\nBackers and Supporters:","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":123,"to":142}}}}],["211",{"pageContent":"<a href=\"https://opencollective.com/maplibre/backer/0/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/0/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/1/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/1/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/2/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/2/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/3/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/3/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/4/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/4/avatar.svg?requireActive=false\"></a>","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":144,"to":148}}}}],["212",{"pageContent":"<a href=\"https://opencollective.com/maplibre/backer/4/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/4/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/5/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/5/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/6/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/6/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/7/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/7/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/8/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/8/avatar.svg?requireActive=false\"></a>","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":148,"to":152}}}}],["213",{"pageContent":"<a href=\"https://opencollective.com/maplibre/backer/8/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/8/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/9/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/9/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/10/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/10/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/11/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/11/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/12/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/12/avatar.svg?requireActive=false\"></a>","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":152,"to":156}}}}],["214",{"pageContent":"<a href=\"https://opencollective.com/maplibre/backer/12/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/12/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/13/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/13/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/14/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/14/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/15/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/15/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/16/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/16/avatar.svg?requireActive=false\"></a>","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":156,"to":160}}}}],["215",{"pageContent":"<a href=\"https://opencollective.com/maplibre/backer/16/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/16/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/17/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/17/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/18/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/18/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/19/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/19/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/20/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/20/avatar.svg?requireActive=false\"></a>","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":160,"to":164}}}}],["216",{"pageContent":"<a href=\"https://opencollective.com/maplibre/backer/20/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/20/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/21/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/21/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/22/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/22/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/23/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/23/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/24/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/24/avatar.svg?requireActive=false\"></a>","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":164,"to":168}}}}],["217",{"pageContent":"<a href=\"https://opencollective.com/maplibre/backer/24/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/24/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/25/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/25/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/26/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/26/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/27/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/27/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/28/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/28/avatar.svg?requireActive=false\"></a>","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":168,"to":172}}}}],["218",{"pageContent":"<a href=\"https://opencollective.com/maplibre/backer/28/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/28/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/29/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/29/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/maplibre/backer/30/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/maplibre/backer/30/avatar.svg?requireActive=false\"></a>","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":172,"to":174}}}}],["219",{"pageContent":"<br />","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":174,"to":174}}}}],["220",{"pageContent":"Thank you Mapbox 🙏🏽\n\nWe'd like to acknowledge the amazing work Mapbox has contributed to open source. The open source community is sad to part ways with them, but we simultaneously feel grateful for everything they already contributed. `mapbox-gl-js` 1.x is an open source achievement that now lives on as `maplibre-gl`. We're proud to develop on the shoulders of giants, thank you Mapbox 🙇🏽‍♀️.\n\nPlease keep in mind: Unauthorized backports are the biggest threat to the MapLibre project. It is unacceptable to backport code from mapbox-gl-js, which is not covered by the former BSD-3 license. If you are unsure about this issue, [please ask](https://github.com/maplibre/maplibre-gl-js/discussions)!\n\n<br />\n\n## License\n\n**MapLibre GL** is licensed under the [3-Clause BSD license](./LICENSE.txt).","metadata":{"source":"https://github.com/maplibre/maplibre-gl-js","loc":{"lines":{"from":316,"to":326}}}}],["221",{"pageContent":"[![npm](https://img.shields.io/npm/v/pmtiles)](https://www.npmjs.com/package/pmtiles)\n[![js minzipped size](https://img.shields.io/bundlephobia/minzip/pmtiles)](https://bundlephobia.com/package/pmtiles)\n[![pypi](https://img.shields.io/pypi/v/pmtiles)](https://pypi.org/project/pmtiles/)\n\n🔎 **PMTiles Viewer:** [https://protomaps.github.io/PMTiles/](https://protomaps.github.io/PMTiles/) 🔎\n\n# PMTiles\n\nPMTiles is a single-file archive format for tiled data. A PMTiles archive can be hosted on a commodity storage platform such as S3, and enables low-cost, zero-maintenance map applications that are \"serverless\" - free of a custom tile backend or third party provider.\n\n* [Protomaps Blog: Dynamic Maps, Static Storage](http://protomaps.com/blog/dynamic-maps-static-storage)\n\n* [PMTiles Viewer](https://protomaps.github.io/PMTiles/) - inspect and preview PMTiles local or remote PMTiles archives. \n    * Archives on cloud storage may require CORS for the origin `https://protomaps.github.io`","metadata":{"source":"https://github.com/protomaps/PMTiles","loc":{"lines":{"from":1,"to":14}}}}],["222",{"pageContent":"* [Vector Tiles Example (US Zip Codes)](https://protomaps.github.io/PMTiles/?url=https%3A%2F%2Fr2-public.protomaps.com%2Fprotomaps-sample-datasets%2Fcb_2018_us_zcta510_500k.pmtiles)\n\n\nDemos require MapLibre GL JS v1.15 or later.\n\nSee also:\n* [Cloud Optimized GeoTIFFs](https://www.cogeo.org)","metadata":{"source":"https://github.com/protomaps/PMTiles","loc":{"lines":{"from":16,"to":22}}}}],["223",{"pageContent":"Creating PMTiles\n\nDownload the `pmtiles` binary for your system at [go-pmtiles/Releases](https://github.com/protomaps/go-pmtiles/releases).\n\n    pmtiles convert INPUT.mbtiles OUTPUT.pmtiles\n    pmtiles upload OUTPUT.mbtiles s3://my-bucket?region=us-west-2 // requires AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY env vars to be set\n\n## Consuming PMTiles\n\n### JavaScript\n\nSee [js/README.md](js/README.md) and [js/examples](js/examples) for usage in Leaflet or MapLibre GL JS.\n\n### Go\n\nSee the [go-pmtiles](https://github.com/protomaps/go-pmtiles) repository.\n\n### Python\n\nSee https://github.com/protomaps/PMTiles/tree/master/python/bin for library usage\n\n### Serverless\n\n[PMTiles on AWS Lambda](https://github.com/protomaps/PMTiles/tree/master/serverless/aws)\n\n[PMTiles on Cloudflare Workers](https://github.com/protomaps/PMTiles/tree/master/serverless/cloudflare)\n\n## Specification\n\nThe current specification version is [Version 3](./spec/v3/spec.md).","metadata":{"source":"https://github.com/protomaps/PMTiles","loc":{"lines":{"from":24,"to":53}}}}],["224",{"pageContent":"Recipes\n\nExample of how to create a PMTiles archive from the [Census Bureau Zip Code Tabulation Areas Shapefile](https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html) using [tippecanoe](http://github.com/protomaps/tippecanoe) and the [`pmtiles`](https://github.com/protomaps/go-pmtiles/releases) standalone binary:\n\n```sh\n    # use GDAL/OGR to convert SHP to GeoJSON\n    ogr2ogr -t_srs EPSG:4326 cb_2018_us_zcta510_500k.json cb_2018_us_zcta510_500k.shp\n    # Creates a layer in the vector tiles named \"zcta\"\n    tippecanoe -zg --projection=EPSG:4326 -o cb_2018_us_zcta510_500k_nolimit.mbtiles -l zcta cb_2018_us_zcta510_500k.json\n    pmtiles convert cb_2018_us_zcta510_500k_nolimit.mbtiles cb_2018_us_zcta510_500k.pmtiles\n```","metadata":{"source":"https://github.com/protomaps/PMTiles","loc":{"lines":{"from":55,"to":65}}}}],["225",{"pageContent":"Uploading to Storage\n\nUsing the [PMTiles command line tool](http://github.com/protomaps/go-pmtiles):\n\n```sh\npmtiles upload LOCAL.pmtiles \"s3://BUCKET_NAME?endpoint=https://example.com&region=region\" REMOTE.pmtiles\n```\n\nUsing [RClone](https://rclone.org) (do `rclone config` first)\n\n```sh\nrclone copyto LOCAL.pmtiles r2:/BUCKET/REMOTE.pmtiles --progress --s3-chunk-size=256M --s3-upload-concurrency=2\n```","metadata":{"source":"https://github.com/protomaps/PMTiles","loc":{"lines":{"from":67,"to":79}}}}],["226",{"pageContent":"License\n\nThe reference implementations of PMTiles are published under the BSD 3-Clause License. The PMTiles specification itself is public domain, or under a CC0 license where applicable.","metadata":{"source":"https://github.com/protomaps/PMTiles","loc":{"lines":{"from":81,"to":83}}}}],["227",{"pageContent":"# go-pmtiles\r\n\r\nThe single-file utility for creating and working with [PMTiles](https://github.com/protomaps/PMTiles) archives.\r\n\r\n## Installation\r\n\r\nSee [Releases](https://github.com/protomaps/go-pmtiles/releases) for your OS and architecture.\r\n\r\n## Creating PMTiles archives\r\n\r\nConvert an [MBTiles](https://github.com/mapbox/mbtiles-spec/tree/master/1.3) archive:\r\n\r\n    pmtiles convert INPUT.mbtiles OUTPUT.pmtiles\r\n    \r\nUpgrade a PMTiles version 2 to the latest version:\r\n\r\n    pmtiles convert INPUT.pmtiles OUTPUT.pmtiles\r\n\r\n## Uploading\r\n    \r\nUpload an archive to S3-compatible cloud storage:\r\n\r\n    # requires environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY credentials\r\n    pmtiles upload INPUT.pmtiles REMOTE.pmtiles --bucket=s3://BUCKET_NAME\r\n\r\n## Inspecting archives\r\n\r\n    pmtiles show INPUT.pmtiles\r\n    pmtiles show INPUT.pmtiles --bucket=s3://BUCKET_NAME","metadata":{"source":"https://github.com/protomaps/go-pmtiles","loc":{"lines":{"from":1,"to":29}}}}],["228",{"pageContent":"Serving Z/X/Y tiles\r\n\r\nThis section covers running a Z/X/Y tile server proxy for clients that read only those URLs. The simplest way to consume PMTiles on the web is directly in the browser: see the [JavaScript examples](https://github.com/protomaps/PMTiles/tree/main/js).\r\n    \r\nServe a directory of archives from local or cloud storage as a Z/X/Y endpoint:\r\n\r\n    pmtiles serve .\r\n    # serves at http://localhost:8077/FILENAME/{z}/{x}/{y}.mvt\r\n\r\n    pmtiles serve / --bucket=s3://BUCKET_NAME\r\n    pmtiles serve prefix --bucket=s3://BUCKET_NAME\r\n    \r\nFor production usage, it's recommended to run behind a reverse proxy like Nginx or Caddy to manage HTTP headers (`Access-Control-Allow-Origin`, `Cache-Control`...) and SSL certificates.\r\n\r\n    pmtiles serve [FLAGS] BUCKET\r\n\r\n* `--cors=ORIGIN` set the value of the Access-Control-Allow-Origin. * is a valid value but must be escaped in your shell. Appropriate for development use.","metadata":{"source":"https://github.com/protomaps/go-pmtiles","loc":{"lines":{"from":31,"to":47}}}}],["229",{"pageContent":"pmtiles serve [FLAGS] BUCKET\r\n\r\n* `--cors=ORIGIN` set the value of the Access-Control-Allow-Origin. * is a valid value but must be escaped in your shell. Appropriate for development use.\r\n* `--cache-size=SIZE_MB` set the total size of the header and directory LRU cache. Default is 64 MB.\r\n* `--port=PORT` specify the HTTP port.\r\n\r\nMetadata is served at the URL path `/<archive_name>/metadata`.\r\n\r\nTiles are served at the URL path `/<archive_name>/<z>/<x>/<y>.<ext>`, where the extension `<ext>` is one of `mvt`, `png`, `jpg`, or `webp`.","metadata":{"source":"https://github.com/protomaps/go-pmtiles","loc":{"lines":{"from":47,"to":55}}}}],["230",{"pageContent":"Remote URLs\r\n\r\nCloud storage URLs can be any URL recognized by [gocloud](https://gocloud.dev/concepts/urls/). Configure a custom endpoint and region:\r\n\r\n```sh\r\ns3://BUCKET_NAME?endpoint=https://example.com&region=REGION\r\n```\r\n\r\nYou may need to escape special characters like `&` and `?` in your shell.\r\n\r\n## Cloud Storage Permissions\r\n\r\nTo upload your files to AWS S3 you will need an IAM policy for writing/reading to a bucket, at minimum this:\r\n\r\n    {\r\n        \"Version\": \"2012-10-17\",\r\n        \"Statement\": [\r\n            {\r\n                \"Effect\": \"Allow\",\r\n                \"Action\": \"s3:*\",\r\n                \"Resource\": \"arn:aws:s3:::my-bucket-name/*\"\r\n            }\r\n        ]\r\n    }","metadata":{"source":"https://github.com/protomaps/go-pmtiles","loc":{"lines":{"from":57,"to":80}}}}],["231",{"pageContent":"<p align=\"right\">\n  <a href=\"https://npmjs.org/package/react-map-gl\">\n    <img src=\"https://img.shields.io/npm/v/react-map-gl.svg?style=flat-square\" alt=\"version\" />\n  </a>\n  <a href=\"https://github.com/visgl/react-map-gl/actions?query=workflow%3Atest+branch%3Amaster\">\n    <img src=\"https://github.com/visgl/react-map-gl/workflows/test/badge.svg?branch=master\" alt=\"build\" />\n  <a href=\"https://npmjs.org/package/react-map-gl\">\n    <img src=\"https://img.shields.io/npm/dm/react-map-gl.svg?style=flat-square\" alt=\"downloads\" />\n  </a>\n</p>\n\n<h1 align=\"center\">react-map-gl | <a href=\"https://visgl.github.io/react-map-gl\">Docs</a></h1>\n\n`react-map-gl` is a suite of [React](http://facebook.github.io/react/) components designed to provide a React API for [Mapbox GL JS](https://github.com/mapbox/mapbox-gl-js)-compatible libraries. More information in the online documentation.\n\nSee our [Design Philosophy](docs/README.md#design-philosophy).","metadata":{"source":"https://github.com/visgl/react-map-gl","loc":{"lines":{"from":1,"to":16}}}}],["232",{"pageContent":"Installation\n\nUsing `react-map-gl` requires `react >= 16.3`.\n\n```sh\nnpm install --save react-map-gl mapbox-gl\n```\n\n### Example\n\n```js\nimport * as React from 'react';\nimport Map from 'react-map-gl';\n\nfunction App() {\n  return <Map\n    initialViewState={{\n      longitude: -100,\n      latitude: 40,\n      zoom: 3.5\n    }}\n    style={{width: 600, height: 400}}\n    mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n  />;\n}\n```","metadata":{"source":"https://github.com/visgl/react-map-gl","loc":{"lines":{"from":18,"to":43}}}}],["233",{"pageContent":"Using Mapbox Tokens\n\n**Starting with v2.0, mapbox-gl requires a Mapbox token for any usage, with or without the Mapbox data service. See [about Mapbox tokens](/docs/get-started/mapbox-tokens.md) for your options.**\n\nTo show maps from a service such as Mapbox you will need to register on their website in order to retrieve an access token required by the map component, which will be used to identify you and start serving up map tiles. The service will be free until a certain level of traffic is exceeded.\n\nThere are several ways to provide a token to your app, as showcased in some of the example folders:\n\n* Provide a `mapboxAccessToken` prop to the map component\n* Set the `MapboxAccessToken` environment variable (or set `REACT_APP_MAPBOX_ACCESS_TOKEN` if you are using Create React App)\n* Provide it in the URL, e.g `?access_token=TOKEN`\n\n\n### Contribute\n\nSee [contribution guide](/CONTRIBUTING.md).","metadata":{"source":"https://github.com/visgl/react-map-gl","loc":{"lines":{"from":45,"to":60}}}}],["234",{"pageContent":"Contribute\n\nSee [contribution guide](/CONTRIBUTING.md).\n\n\n### Attributions\n\nreact-map-gl is part of vis.gl, an [Urban Computing Foundation](https://uc.foundation) project.\n\nDevelopment is also supported by\n\n<img src=\"https://raw.githubusercontent.com/visgl/deck.gl-data/master/images/branding/mapbox.svg\" height=\"40\" />","metadata":{"source":"https://github.com/visgl/react-map-gl","loc":{"lines":{"from":60,"to":71}}}}]]